package com.kh.spring.board.medel.service;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.kh.spring.board.medel.dao.BoardDao;
import com.kh.spring.board.medel.vo.Attachment;
import com.kh.spring.board.medel.vo.Board;
import com.kh.spring.common.Utils;

@Service
public class BoardServiceImpl implements BoardService {
	
	@Autowired
	private BoardDao boardDao;
	
	public List<Board> selectList(int currentPage, Map<String, Object> paramMap){
		return boardDao.selectList(currentPage, paramMap);
	}
	
	public int selectListCount(Map<String, Object> paramMap) {
		return boardDao.selectListCount(paramMap);
	}
	
	/*
	 * 게시글 + 첨부파일이 함께 삽입 => 이중 하나라도 에러가 발생할 경우 전체 rollback 해줘야한다.
	 * 
	 * @Transactional 선언적 트랜잭션 처리 방법
	 * rollbackFor => rollback 터리를 수행하기 위한 에러의 종류.
	 * 즉, rollbackFor의 속성 값으로 추가된 예외가 발생할 경우 rollback 처리를 시켜준다.
	 * 
	 * */
	@Transactional(rollbackFor = {Exception.class})// 어떤 종류의 예외가 발생했든 발생했다면 무조건 rollback 시키겠다.
	@Override
	public int intsertBaord(Board b, List<Attachment>list, String serverFolderPath, String webPath) {
		// 1. 게시글 삽입
		//    게시글 등록 후 해당 게시글의 pk값을 반환받기
		//	  게시글 삽입 시 게시글의 제목과 본문에 들어가는 문자열에 크로스 사이트 스트립트 공격을 방지하기 위한 메소드 추가
		//	  텍스트에리어태그에 엔터, 스페이스바를 개행문자로 변환 처리
		b.setBoardTitle(Utils.XSSHandling(b.getBoardTitle()));
		b.setBoardContent(Utils.XSSHandling(b.getBoardContent()));
		b.setBoardContent(Utils.newLineHandling(b.getBoardContent()));
		
		// 2. 첨부파일 등록 -> list가 비어있지 않은 경우 실행
		
	}
}
