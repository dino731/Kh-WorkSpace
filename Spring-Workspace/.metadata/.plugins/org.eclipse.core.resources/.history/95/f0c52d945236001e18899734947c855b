package com.kh.spring.common;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.web.multipart.MultipartFile;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class Utils {

	// 변경된 이름을 돌려주면서, 원본 파일을 변경된 파일 이름으로 서버에 저장시키는 메소드
	public static String saveFile(MultipartFile upfile, String savePath) {
		String originName = upfile.getOriginalFilename(); // flower.jpg
		String currentTime = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()); //20230807122350
		int random = (int)(Math.random()*90000+10000); // 5자리 랜덤 정수값
		String ext = originName.substring(originName.lastIndexOf("."));
		
		String changeName = currentTime+random+ext;
		
		try {
			upfile.transferTo(new File(savePath+changeName));
		} catch (IllegalStateException e) {
//			e.printStackTrace();
			log.error("게시글등록오류={}",e.getMessage());
		} catch (IOException e) {
			log.error("게시글등록오류={}",e.getMessage());
		}
		
		return changeName;
	}
	// 크로스 사이트 스크립트 송격을 방지하기 위한 메소드
	public static String XSSHandling(String content) {
		if(content != null) {
			content = content.replaceAll("&","&amp;");
			content = content.replaceAll("<","&lt;");
			content = content.replaceAll(">","&gt;");
			content = content.replaceAll("\"","&quot;"); //\역슬래시 뒤에 오는 문자는 무시하겠다! 그래서 "를 더 추가해주면 된다.( "\"" )
		}
		return content;
	}
	// 개행 문자 처리
	public static String newLineHandling(String content) {
		return content.replaceAll("(\r\n|\r|\n|\n\r)", "<br>");
	}
	
	
	
	
	
	
	
	
	
}
