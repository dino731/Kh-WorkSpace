<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- @Controller, @Service, @Repository, @Component ... 어노테이션을 사용가능하도록 활성화 해주는 설정 -->
	<annotation-driven />

	<!-- 
		정적인 파일들에 대한 요청을 mapping해준다.
		/resources/* : /resources/a.jpg, /resources
		/resources/** :  /resources/a.jpg, /resources , /resources/img/b.jpg
	-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 
		주소 자동완성 도구
		매번 같은 주소 (/WEB-INF/views/)를 추가해야하기 때문에 주소 자동 완성 기능이 기본적으로 등록되어있음.
		- view resolver라는 도규를 등록(spring에서 제공)
		- class : internalResourceViewResolver
		- prefix : 접두어 / suffix : 접미어
		- 문자열 값을 return할때 해당 문자열에 접두어, 접미어를 붙여서 포워딩을 시켜준다.
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		base-package에 등록된 패키지와 그 하위에 존재하는 모든 패키지를 scan(감시)해서 bean으로 등록가능한 클래스가 있다면 모두 등록 시키겠다.
		bean? 스프링 프레임워크에서 관리하는 자바 객체. 딱 1개만 생성해서 관리.
	 -->
	<context:component-scan base-package="com.kh.spring" />
	
	<!-- ================기본세팅 끝====================  -->
	
	<!-- 비동기 요청 처리를 위한 jsonView Bean 객체 등록. -->
	
	<!-- 404에러 떴을때 쓰이는 빈즈 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>
	</beans:bean>
	<!-- 처리 순서는 1로 우선처리되도록 하고, 올바른 bean을 찾지 못한 경우 위의 internalResourceViewResolve가 대신 처리하게 해준다? -->
	
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8"/>
	</beans:bean>
	
	<!-- @ResponseBody를 사용할 때 자바의 객체 형태의 데이터를 자동으로 JSON형태로 변환해줄 Bean객체 -->
	<beans:bean id="jscksonMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	
	
</beans:beans>
