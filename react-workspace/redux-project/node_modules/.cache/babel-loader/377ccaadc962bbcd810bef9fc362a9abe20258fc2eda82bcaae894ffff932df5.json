{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\redux-project\\\\src\\\\Clock.js\",\n  _s = $RefreshSig$();\n/* \r\n  useSelector() ? 리덕스 저장소에 저장된 특정 상태를 얻어올 때 사용한다.\r\n\r\n  useDispatch() ? 액션을 저장소로 운반하는 역할을 함\r\n                  Reducer의 두 번째 매개변수로 action객체를 전달시켜줌\r\n*/\nimport { useSelector, useDispatch } from \"react-redux/es/hooks/useSelector\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Clock() {\n  _s();\n  // 초기 값으로 셋팅해두었던 today상태값 얻어오기\n  const today = useSelector(state => state.today);\n  //( ({today}) => today ); 둘다 가능하다\n  const dispatch = useDispatch(); // dispatch 함수 얻어오기.\n\n  useEffect(() => {\n    const id = setInterval(\n    // 원하는 시간마다 리턴하는 콜백함수를 저장하는 함수\n    () => {\n      dispatch();\n    });\n    return () => clearInterval(id);\n  }, []);\n  // useSelector훅을 사용하여 현재시간을 저장소에서 꺼낸후 화면에 출력하기\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center mt-16\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl\",\n      children: \"Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-3xl\",\n      children: today.toLocaleTimeString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-2xl\",\n      children: today.toLocaleDateString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Clock, \"YSNe9C5A0GrUw+LKT6WiGBFWCkE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["useSelector","useDispatch","useEffect","jsxDEV","_jsxDEV","Clock","_s","today","state","dispatch","id","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/react-workspace/redux-project/src/Clock.js"],"sourcesContent":["/* \r\n  useSelector() ? 리덕스 저장소에 저장된 특정 상태를 얻어올 때 사용한다.\r\n\r\n  useDispatch() ? 액션을 저장소로 운반하는 역할을 함\r\n                  Reducer의 두 번째 매개변수로 action객체를 전달시켜줌\r\n*/\r\nimport { useSelector, useDispatch } from \"react-redux/es/hooks/useSelector\";\r\nimport { useEffect } from \"react\";\r\nexport default function Clock(){\r\n  // 초기 값으로 셋팅해두었던 today상태값 얻어오기\r\n  const today = useSelector( (state) => state.today);\r\n                        //( ({today}) => today ); 둘다 가능하다\r\n  const dispatch = useDispatch(); // dispatch 함수 얻어오기.\r\n\r\n  useEffect( () => {\r\n    const id = setInterval(  // 원하는 시간마다 리턴하는 콜백함수를 저장하는 함수\r\n    () => {\r\n      dispatch()\r\n    }\r\n    )\r\n    return () => clearInterval(id)\r\n  },[])\r\n  // useSelector훅을 사용하여 현재시간을 저장소에서 꺼낸후 화면에 출력하기\r\n  return (\r\n    <div  className=\"flex flex-col items-center justify-center mt-16\">\r\n      <h1 className=\"text-5xl\">Clock</h1>\r\n      <p className=\"mt-4 text-3xl\">{today.toLocaleTimeString()}</p>\r\n      <p className=\"mt-4 text-2xl\">{today.toLocaleDateString()}</p>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,kCAAkC;AAC3E,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,eAAe,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EAC7B;EACA,MAAMC,KAAK,GAAGP,WAAW,CAAGQ,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EAC5B;EACtB,MAAME,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCC,SAAS,CAAE,MAAM;IACf,MAAMQ,EAAE,GAAGC,WAAW;IAAG;IACzB,MAAM;MACJF,QAAQ,CAAC,CAAC;IACZ,CACA,CAAC;IACD,OAAO,MAAMG,aAAa,CAACF,EAAE,CAAC;EAChC,CAAC,EAAC,EAAE,CAAC;EACL;EACA,oBACEN,OAAA;IAAMS,SAAS,EAAC,iDAAiD;IAAAC,QAAA,gBAC/DV,OAAA;MAAIS,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCd,OAAA;MAAGS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP,KAAK,CAACY,kBAAkB,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Dd,OAAA;MAAGS,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEP,KAAK,CAACa,kBAAkB,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1D,CAAC;AAEV;AAACZ,EAAA,CAvBuBD,KAAK;EAAA,QAEbL,WAAW,EAERC,WAAW;AAAA;AAAAoB,EAAA,GAJNhB,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}