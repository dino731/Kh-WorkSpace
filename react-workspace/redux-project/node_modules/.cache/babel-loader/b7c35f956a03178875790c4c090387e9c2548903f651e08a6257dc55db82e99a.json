{"ast":null,"code":"/* \r\n  middle?\r\n  미들웨어란 액션을 dispatch 함수로 전달하고 리듀서가 실행되기 전, 실행된 후 처리되는 기능\r\n  redux패키지 에서 지원하는 applyMiddleware함수를 사용하면 간편하게 구현 가능하다.\r\n\r\n\r\n*/\nimport { applyMiddleware } from \"redux\";\nconst CallMiddleware = store => nextMiddle => action => {\n  console.log('1. reducer 실행 전');\n  console.log('2. action.type : ' + action.type + \" , store\" + store.getState().data);\n  let result = nextMiddle(action); // reducer를 통해 액션이 스토에어 전달.\n  console.log(\"3. reducer 실행 후 \");\n  console.log('4. action.type : ' + action.type + \" , store\" + store.getState().data);\n  return result;\n};\nexport default CallMiddleware;","map":{"version":3,"names":["applyMiddleware","CallMiddleware","store","nextMiddle","action","console","log","type","getState","data","result"],"sources":["C:/react-workspace/redux-project/src/CallMiddleware.js"],"sourcesContent":["/* \r\n  middle?\r\n  미들웨어란 액션을 dispatch 함수로 전달하고 리듀서가 실행되기 전, 실행된 후 처리되는 기능\r\n  redux패키지 에서 지원하는 applyMiddleware함수를 사용하면 간편하게 구현 가능하다.\r\n\r\n\r\n*/\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nconst CallMiddleware = store => nextMiddle => action => {\r\n  console.log('1. reducer 실행 전');\r\n  console.log('2. action.type : '+action.type+\" , store\"+store.getState().data);\r\n  let result = nextMiddle(action); // reducer를 통해 액션이 스토에어 전달.\r\n  console.log(\"3. reducer 실행 후 \");\r\n  console.log('4. action.type : '+action.type+\" , store\"+store.getState().data);\r\n  return result;\r\n}\r\nexport default CallMiddleware;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,QAAQ,OAAO;AAEvC,MAAMC,cAAc,GAAGC,KAAK,IAAIC,UAAU,IAAIC,MAAM,IAAI;EACtDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9BD,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACF,MAAM,CAACG,IAAI,GAAC,UAAU,GAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC;EAC7E,IAAIC,MAAM,GAAGP,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC;EACjCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAC/BD,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAACF,MAAM,CAACG,IAAI,GAAC,UAAU,GAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC;EAC7E,OAAOC,MAAM;AACf,CAAC;AACD,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}