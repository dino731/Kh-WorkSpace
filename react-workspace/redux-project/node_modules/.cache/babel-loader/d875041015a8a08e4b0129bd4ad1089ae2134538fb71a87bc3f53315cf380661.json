{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\redux-project\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addTodos, deleteTodos } from '../redux/todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  // useState를 활용하여 todolist를 state에 저장\n  const todos = useSelector(state => state.todoList.todos);\n  const dispatch = useDispatch();\n\n  // todolist 추가기능\n  const handleAddTodo = useCallback(() => {\n    return dispatch(add);\n  }, []);\n\n  // 완료한 투두리스트 삭제기능.\n  const handleDeleteTodo = index => {};\n  const style = {\n    listStyle: \"none\"\n  };\n  const enter = e => {\n    if (e.key == 'Enter') {\n      handleAddTodo();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"intodo\",\n      onKeyDown: enter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: style,\n        children: [todo, /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handleDeleteTodo(index),\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 47\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"TVeMli2dbnY8o7xT+VIIM56LxR8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useCallback","useSelector","useDispatch","addTodos","deleteTodos","jsxDEV","_jsxDEV","TodoList","_s","todos","state","todoList","dispatch","handleAddTodo","add","handleDeleteTodo","index","style","listStyle","enter","e","key","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onKeyDown","onClick","map","todo","_c","$RefreshReg$"],"sources":["C:/react-workspace/redux-project/src/components/TodoList.js"],"sourcesContent":["import {useState, useCallback} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTodos, deleteTodos } from '../redux/todoSlice';\r\n\r\nfunction TodoList(){\r\n  // useState를 활용하여 todolist를 state에 저장\r\n  const todos = useSelector((state)=> state.todoList.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  // todolist 추가기능\r\n  const handleAddTodo = useCallback(() => {\r\n    return dispatch(add)\r\n\r\n  },[]);\r\n\r\n  // 완료한 투두리스트 삭제기능.\r\n  const handleDeleteTodo = (index) => {\r\n\r\n   \r\n  };\r\n\r\n  const style = {\r\n    listStyle : \"none\"\r\n  }\r\n  const enter = (e) =>{\r\n    if(e.key == 'Enter'){\r\n      handleAddTodo();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n        <h2>Todo List</hr\n        <input type=\"text\" id=\"intodo\" onKeyDown={enter}/>\r\n        <button onClick={handleAddTodo}>추가</button>\r\n        <ul>\r\n        {todos.map((todo, index) => (\r\n          <li style={style} key={index}>{todo}<a onClick={() => handleDeleteTodo(index)}>✅</a></li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n  )\r\n  \r\n}\r\nexport default TodoList;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACjB;EACA,MAAMC,KAAK,GAAGR,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACC,QAAQ,CAACF,KAAK,CAAC;EACzD,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMW,aAAa,GAAGb,WAAW,CAAC,MAAM;IACtC,OAAOY,QAAQ,CAACE,GAAG,CAAC;EAEtB,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK,CAGpC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZC,SAAS,EAAG;EACd,CAAC;EACD,MAAMC,KAAK,GAAIC,CAAC,IAAI;IAClB,IAAGA,CAAC,CAACC,GAAG,IAAI,OAAO,EAAC;MAClBR,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,QAAQ;MAACC,SAAS,EAAEV;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClDpB,OAAA;MAAQwB,OAAO,EAAEjB,aAAc;MAAAS,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CpB,OAAA;MAAAgB,QAAA,EACCb,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEhB,KAAK,kBACrBV,OAAA;QAAIW,KAAK,EAAEA,KAAM;QAAAK,QAAA,GAAcU,IAAI,eAAC1B,OAAA;UAAGwB,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACC,KAAK,CAAE;UAAAM,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAA7DV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4D,CACzF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV;AAAClB,EAAA,CAvCQD,QAAQ;EAAA,QAEDN,WAAW,EACRC,WAAW;AAAA;AAAA+B,EAAA,GAHrB1B,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}