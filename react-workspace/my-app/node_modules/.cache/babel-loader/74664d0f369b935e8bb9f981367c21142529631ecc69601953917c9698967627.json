{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\App2.js\";\nimport './App.css';\nimport PropNode from './03_PropsNode';\nimport StateAndEvent from './04_StateAndEvent';\n\n/* \r\n  자식 컴포넌트에게 node 전달하기\r\n  node란??\r\n  HTML문서를 구성하는 각요소들을 Node라고 부른다.\r\n\r\n  Documnet -> Document node,\r\n  각 요소 객체 (html, head, body, p, div, ... ) -> element node(Document의 자식)\r\n  각 요소의 속성 (id, class, name, ...  ) -> attribute node\r\n  (element요소의 자식 노드는 아니고 같은 레벨의 노드)\r\n  텍스트 => textNode,\r\n  주석  => comment node\r\n\r\n  모두 노드이면서 계층구조를 가지고 있음.\r\n  ex) Documnet아래 hmlt 아래 head, body태그 아래 각 노드들이 계층적으로 존재함.\r\n\r\n\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App2() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(PropNode, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"attribute\",\n        children: \"node from App2.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"attribute2\",\n        children: \"node2 from App2.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n_c = App2;\nexport default App2;\nvar _c;\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"names":["PropNode","StateAndEvent","jsxDEV","_jsxDEV","App2","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-workspace/my-app/src/App2.js"],"sourcesContent":["import './App.css'\r\n\r\nimport PropNode from './03_PropsNode';\r\nimport StateAndEvent from './04_StateAndEvent';\r\n\r\n/* \r\n  자식 컴포넌트에게 node 전달하기\r\n  node란??\r\n  HTML문서를 구성하는 각요소들을 Node라고 부른다.\r\n\r\n  Documnet -> Document node,\r\n  각 요소 객체 (html, head, body, p, div, ... ) -> element node(Document의 자식)\r\n  각 요소의 속성 (id, class, name, ...  ) -> attribute node\r\n  (element요소의 자식 노드는 아니고 같은 레벨의 노드)\r\n  텍스트 => textNode,\r\n  주석  => comment node\r\n\r\n  모두 노드이면서 계층구조를 가지고 있음.\r\n  ex) Documnet아래 hmlt 아래 head, body태그 아래 각 노드들이 계층적으로 존재함.\r\n\r\n\r\n */\r\n\r\n  function App2(){\r\n    return(\r\n      <div>\r\n        <PropNode >\r\n          <span id=\"attribute\">node from App2.js</span>\r\n          <span id=\"attribute2\">node2 from App2.js</span>\r\n\r\n        </PropNode>\r\n      </div>\r\n    )\r\n  }\r\n  export default App2;\r\n"],"mappings":";AAAA,OAAO,WAAW;AAElB,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,aAAa,MAAM,oBAAoB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA,SAAAC,MAAA,IAAAC,OAAA;AAkBE,SAASC,IAAIA,CAAA,EAAE;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACH,QAAQ;MAAAK,QAAA,gBACPF,OAAA;QAAMG,EAAE,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7CP,OAAA;QAAMG,EAAE,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACC,EAAA,GAVQP,IAAI;AAWb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}