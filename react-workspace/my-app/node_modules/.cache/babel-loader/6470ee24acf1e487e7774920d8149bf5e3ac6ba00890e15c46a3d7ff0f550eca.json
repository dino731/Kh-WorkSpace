{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\01_Lifecycle.js\";\n/* \r\n  1. react모듈에서 default옵션을 사요해서 component를 export했다면\r\n  import 모듈명 from '모듈경로';\r\n\r\n  2. react모듈에서 default옵션을 지정하지 않고 export했다면\r\n  import{가져올 객체} from '모듈경로';\r\n*/\nimport { Component } from \"react\";\n// 현재 클래스를 Component로 만들기 위해 필요한 클래스\n\n/* \r\n  Component의 생명주기(생성, 변경, 소멸)와 관련된 함수중 \"생성\"과정과 연관된 함수\r\n\r\n  1. render() : return되는 html 형식의 코드를 화면에 그려주는 함수 (랜더링)\r\n                화면에 내용이 변경되어야할 시점에 자동으로 호출됨.\r\n\r\n  2. constructor(props) : 생성자 함수로 생명주기 함수들 중 가장 먼저 실행되며 처음 딱 한번만 실행됨.\r\n                          Component내부에서 사용되는 변수(state)를 선언하고 부모 객체에서 전달받은 변수(props)를 초기화할때 사용된다.\r\n                          super()함수는 생성자 함수 가장위에서 호출함(자바와 동일)\r\n  \r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Lifecycle extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(\"3. render함수 호출\");\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"render \\uD568\\uC218 \\uD638\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\n/* \r\n  작성한 컴포넌트를 내보내는 방법\r\n  1. export default 객체명; \r\n  // default :  현재 모듈안에서 내보내기할 객체가 한개일때 사용\r\n  2. export {클래스(함수),상수,배열,...};\r\n*/\n// export default Lifecycle;\nexport { Lifecycle };","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","Lifecycle","constructor","props","render","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/react-workspace/my-app/src/01_Lifecycle.js"],"sourcesContent":["/* \r\n  1. react모듈에서 default옵션을 사요해서 component를 export했다면\r\n  import 모듈명 from '모듈경로';\r\n\r\n  2. react모듈에서 default옵션을 지정하지 않고 export했다면\r\n  import{가져올 객체} from '모듈경로';\r\n*/\r\nimport { Component } from \"react\"; \r\n// 현재 클래스를 Component로 만들기 위해 필요한 클래스\r\n\r\n/* \r\n  Component의 생명주기(생성, 변경, 소멸)와 관련된 함수중 \"생성\"과정과 연관된 함수\r\n\r\n  1. render() : return되는 html 형식의 코드를 화면에 그려주는 함수 (랜더링)\r\n                화면에 내용이 변경되어야할 시점에 자동으로 호출됨.\r\n\r\n  2. constructor(props) : 생성자 함수로 생명주기 함수들 중 가장 먼저 실행되며 처음 딱 한번만 실행됨.\r\n                          Component내부에서 사용되는 변수(state)를 선언하고 부모 객체에서 전달받은 변수(props)를 초기화할때 사용된다.\r\n                          super()함수는 생성자 함수 가장위에서 호출함(자바와 동일)\r\n  \r\n */\r\n\r\nclass Lifecycle extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    console.log(\"3. render함수 호출\");\r\n    return(\r\n      <h2>render 함수 호출</h2>\r\n    )\r\n  }\r\n\r\n}\r\n/* \r\n  작성한 컴포넌트를 내보내는 방법\r\n  1. export default 객체명; \r\n  // default :  현재 모듈안에서 내보내기할 객체가 한개일때 사용\r\n  2. export {클래스(함수),상수,배열,...};\r\n*/\r\n// export default Lifecycle;\r\nexport{Lifecycle};"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,SAAAC,MAAA,IAAAC,OAAA;AAYA,MAAMC,SAAS,SAASH,SAAS;EAC/BI,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;EACd;EACAC,MAAMA,CAAA,EAAE;IACNC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,oBACEN,OAAA;MAAAO,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAEzB;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAOV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}