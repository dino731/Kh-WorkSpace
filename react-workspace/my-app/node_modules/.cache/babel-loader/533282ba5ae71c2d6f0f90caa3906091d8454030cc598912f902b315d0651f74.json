{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\08_SpreadOperator.js\",\n  _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\n/* \r\n    전개연산자?\r\n    ...점 3개를 연달아서 사용하는 연산자로 여러개의 객체를 '병합'하여\r\n    한개의 객체로 만들려고 할 때 사용. (깊은 복사를 일으킨다)\r\n\r\n    얕은 복사 -> 주소값만 복사하는 것으로 , 복사본에서 작업, 수정한 내용이 원본에 영향을 끼치는 복사\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst jeans = [1, 2, 3]; // \nconst newJeans = [...jeans, 4, 5]; // [1,2,3,4,5]\n// 전개 연산자를 활용한 이미지 추가기능\nfunction Spread() {\n  _s();\n  const [images, setImages] = useState([]);\n  // images 변수에 빈 배열 등록\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [console.log(images), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add\",\n      onClick: addImage,\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"clear\",\n      onClick: clearImage,\n      children: \"\\uC774\\uBBF8\\uC9C0 \\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Spread, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = Spread;\nexport default Spread;\nvar _c;\n$RefreshReg$(_c, \"Spread\");","map":{"version":3,"names":["useCallback","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","jeans","newJeans","Spread","_s","images","setImages","children","console","log","id","onClick","addImage","fileName","_jsxFileName","lineNumber","columnNumber","clearImage","_c","$RefreshReg$"],"sources":["C:/react-workspace/my-app/src/08_SpreadOperator.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n/* \r\n    전개연산자?\r\n    ...점 3개를 연달아서 사용하는 연산자로 여러개의 객체를 '병합'하여\r\n    한개의 객체로 만들려고 할 때 사용. (깊은 복사를 일으킨다)\r\n\r\n    얕은 복사 -> 주소값만 복사하는 것으로 , 복사본에서 작업, 수정한 내용이 원본에 영향을 끼치는 복사\r\n */\r\n\r\nconst jeans = [1,2,3]; // \r\nconst newJeans = [...jeans,4,5]; // [1,2,3,4,5]\r\n// 전개 연산자를 활용한 이미지 추가기능\r\nfunction Spread(){\r\n  const [images, setImages] = useState([]);\r\n  // images 변수에 빈 배열 등록\r\n  return(\r\n   \r\n    <>\r\n      {console.log(images)}\r\n      <button id='add' onClick={addImage}>이미지 추가</button>\r\n      <button id='clear' onClick={clearImage}>이미지 삭제</button>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default Spread;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AACvB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AACjC;AACA,SAASE,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,oBAEEE,OAAA,CAAAE,SAAA;IAAAO,QAAA,GACGC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC,eACpBP,OAAA;MAAQY,EAAE,EAAC,KAAK;MAACC,OAAO,EAAEC,QAAS;MAAAL,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDlB,OAAA;MAAQY,EAAE,EAAC,OAAO;MAACC,OAAO,EAAEM,UAAW;MAAAV,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACvD,CAAC;AAGP;AAACZ,EAAA,CAZQD,MAAM;AAAAe,EAAA,GAANf,MAAM;AAaf,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}