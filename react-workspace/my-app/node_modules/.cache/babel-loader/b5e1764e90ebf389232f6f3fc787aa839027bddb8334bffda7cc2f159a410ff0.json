{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  // useState를 활용하여 todolist를 state에 저장\n  const [todos, setTodos] = useState([]);\n\n  // todolist 추가기능\n  const handleAddTodo = useCallback(() => {\n    const newtodos = document.getElementById(\"intodo\").value;\n    setTodos([...todos, newtodos]);\n  }, [todos]);\n\n  // 완료한 투두리스트 삭제기능.\n  const handleDeleteTodo = index => {\n    const todolist = [...todos];\n    todolist.splice(index, 1);\n    setTodos(todolist);\n  };\n  const style = li => {\n    style = list.style;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"intodo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => handleDeleteTodo(index),\n          style: \"list-style:none;\",\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"NcS7d9HapUIkJs4mpyc9Y4k7nbI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useState","useCallback","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","handleAddTodo","newtodos","document","getElementById","value","handleDeleteTodo","index","todolist","splice","style","li","list","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","map","todo","_c","$RefreshReg$"],"sources":["C:/react-workspace/my-app/src/TodoList.js"],"sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nfunction TodoList(){\r\n  // useState를 활용하여 todolist를 state에 저장\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // todolist 추가기능\r\n  const handleAddTodo = useCallback(() => {\r\n    const newtodos = document.getElementById(\"intodo\").value;\r\n    setTodos([...todos,newtodos]);\r\n\r\n  },[todos]);\r\n\r\n  // 완료한 투두리스트 삭제기능.\r\n  const handleDeleteTodo = (index) => {\r\n    const todolist = [...todos];\r\n    todolist.splice(index,1);\r\n    setTodos(todolist);\r\n   \r\n  };\r\n\r\n  const style = (li)=>{\r\n    style=list.style\r\n  }\r\n\r\n  return(\r\n    <div>\r\n        <h2>Todo List</hr\n        <input type=\"text\" id=\"intodo\" />\r\n        <button onClick={handleAddTodo}>추가</button>\r\n        <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>{todo}<a onClick={() => handleDeleteTodo(index)} style=\"list-style:none;\">✅</a></li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n  )\r\n  \r\n}\r\nexport default TodoList;"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,WAAW,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMQ,aAAa,GAAGP,WAAW,CAAC,MAAM;IACtC,MAAMQ,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK;IACxDL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACG,QAAQ,CAAC,CAAC;EAE/B,CAAC,EAAC,CAACH,KAAK,CAAC,CAAC;;EAEV;EACA,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,QAAQ,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC3BS,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAC,CAAC,CAAC;IACxBP,QAAQ,CAACQ,QAAQ,CAAC;EAEpB,CAAC;EAED,MAAME,KAAK,GAAIC,EAAE,IAAG;IAClBD,KAAK,GAACE,IAAI,CAACF,KAAK;EAClB,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC;IAAQ;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCrB,OAAA;MAAQwB,OAAO,EAAEnB,aAAc;MAAAY,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3CrB,OAAA;MAAAiB,QAAA,EACCd,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEf,KAAK,kBACrBX,OAAA;QAAAiB,QAAA,GAAiBS,IAAI,eAAC1B,OAAA;UAAGwB,OAAO,EAAEA,CAAA,KAAMd,gBAAgB,CAACC,KAAK,CAAE;UAACG,KAAK,EAAC,kBAAkB;UAAAG,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GAAtFV,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqF,CACpG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV;AAACnB,EAAA,CApCQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}