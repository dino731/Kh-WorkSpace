{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\05_PureComponent.js\";\nimport { Component, PureComponent } from \"react\";\nimport { shallowEqualObjects, shallowEqualArrays } from 'shallow-equal';\n\n/* \r\n    1. PureCompnent?\r\n    class형 컴포넌트는 Component와 PureComponent가 있다.\r\n\r\n    두 함수 모두 props와 state의 변경에 따라 render함수를 호출하는데 호출을 하는 기준이 약간 다르다.\r\n\r\n    Component에서는 setState함수 호출 시 내부적으로 변경하고자 하는 state의 값이 같더라도\r\n    항상 render()함수를 호출하였다.\r\n\r\n    PureComponent에서는 바꿀 값 자체를 실제로 비교하여 값이 동일한 경우 변경되지 않았다고 간주하고 render함수를 호출하지 않는다.\r\n\r\n    Component와 비교해 봤을 때 불필요한 화면 변환이 발생하지 않으므로 약간이지만 페이지 성능을 향상시킬 수 있다.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Pure extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.stateChange = flag => {\n      if (flag == 'string') {\n        this.setState({\n          StateString: 'react'\n        }); // render 호출 x\n      } else if (flag == 'array') {\n        this.setState({\n          SatateArray: ['react']\n        }); // render 호출 o\n      } else {\n        this.setState({\n          StateObject: {\n            react: 'react'\n          }\n        }); // reder 호출 o\n      }\n    };\n    this.state = {\n      StateString: 'react',\n      StateArray: ['react'],\n      StateObject: {\n        react: 'react'\n      }\n    };\n  }\n  /* \r\n    객체의 경우 변수 값이 아니라 객체의 주소값을 통해 비교를 수행하기 때문에 \r\n    기존 state에 담겨있던 StateObject나 StateArray는 서로 완전 다른 값이라고 판단하고 render메서드가 호출됨\r\n   */\n  render() {\n    console.log(\"render 호출됨\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('string'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('array'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('object'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 76\n      }, this), \"state :: StateString : \", this.state.StateString, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 59\n      }, this), \"state :: StateArray : \", this.state.StateArray.toString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 68\n      }, this), \"state :: StateObject : \", JSON.stringify(this.state.StateObject)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass Shallow extends Component {\n  constructor(props) {\n    super(props);\n    this.stateChange = flag => {\n      if (flag == 'string') {\n        this.setState({\n          StateString: 'react'\n        }); // render 호출 x\n      } else if (flag == 'array') {\n        this.setState({\n          SatateArray: ['react']\n        }); // render 호출 o\n      } else {\n        this.setState({\n          StateObject: {\n            react: 'react'\n          }\n        }); // reder 호출 o\n      }\n    };\n    this.state = {\n      StateString: 'react',\n      StateArray: ['react'],\n      StateObject: {\n        react: 'react'\n      }\n    };\n  }\n  /* \r\n      컴포넌트 라이프 사이클중 변경과 관련된 메소드\r\n      반환값에 따라 컴포넌트를 업데이트 할지 (true), 말지 (false) 결정함\r\n  */\n  shouldComponentUpdate(nextProps, nextState) {\n    return shallowEqualArrays(this.state.StateArray, nextState.StateArray);\n  }\n  render() {\n    console.log(\"render 호출됨\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('string'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('array'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 75\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stateChange('object'),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 76\n      }, this), \"state :: StateString : \", this.state.StateString, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 59\n      }, this), \"state :: StateArray : \", this.state.StateArray.toString(), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 68\n      }, this), \"state :: StateObject : \", JSON.stringify(this.state.StateObject)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport { Pure, Shallow };","map":{"version":3,"names":["Component","PureComponent","shallowEqualObjects","shallowEqualArrays","jsxDEV","_jsxDEV","Pure","constructor","props","stateChange","flag","setState","StateString","SatateArray","StateObject","react","state","StateArray","render","console","log","style","padding","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toString","JSON","stringify","Shallow","shouldComponentUpdate","nextProps","nextState"],"sources":["C:/react-workspace/my-app/src/05_PureComponent.js"],"sourcesContent":["import { Component , PureComponent } from \"react\";\r\nimport {shallowEqualObjects, shallowEqualArrays} from 'shallow-equal';\r\n\r\n/* \r\n    1. PureCompnent?\r\n    class형 컴포넌트는 Component와 PureComponent가 있다.\r\n\r\n    두 함수 모두 props와 state의 변경에 따라 render함수를 호출하는데 호출을 하는 기준이 약간 다르다.\r\n\r\n    Component에서는 setState함수 호출 시 내부적으로 변경하고자 하는 state의 값이 같더라도\r\n    항상 render()함수를 호출하였다.\r\n\r\n    PureComponent에서는 바꿀 값 자체를 실제로 비교하여 값이 동일한 경우 변경되지 않았다고 간주하고 render함수를 호출하지 않는다.\r\n\r\n    Component와 비교해 봤을 때 불필요한 화면 변환이 발생하지 않으므로 약간이지만 페이지 성능을 향상시킬 수 있다.\r\n */\r\nclass Pure extends PureComponent{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        StateString : 'react',\r\n        StateArray : ['react'],\r\n        StateObject : {react : 'react'}\r\n    }\r\n  }\r\n  stateChange = (flag) => {\r\n    if(flag == 'string'){\r\n      this.setState({StateString : 'react'}); // render 호출 x\r\n    }else if(flag == 'array'){\r\n      this.setState({SatateArray : ['react']}); // render 호출 o\r\n    }else{\r\n      this.setState({StateObject : {react : 'react'}}); // reder 호출 o\r\n    }\r\n  }\r\n  /* \r\n    객체의 경우 변수 값이 아니라 객체의 주소값을 통해 비교를 수행하기 때문에 \r\n    기존 state에 담겨있던 StateObject나 StateArray는 서로 완전 다른 값이라고 판단하고 render메서드가 호출됨\r\n   */\r\n  render(){\r\n    console.log(\"render 호출됨\");\r\n    return(\r\n      <div style={{padding:\"0px\"}}>\r\n          <button onClick={ () => this.stateChange('string') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('array') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('object') }>클릭</button> <br/>\r\n          state :: StateString : {this.state.StateString} <br/>\r\n          state :: StateArray : {this.state.StateArray.toString()} <br/>\r\n          state :: StateObject : {JSON.stringify(this.state.StateObject)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Shallow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        StateString : 'react',\r\n        StateArray : ['react'],\r\n        StateObject : {react : 'react'}\r\n    }\r\n  }\r\n  /* \r\n      컴포넌트 라이프 사이클중 변경과 관련된 메소드\r\n      반환값에 따라 컴포넌트를 업데이트 할지 (true), 말지 (false) 결정함\r\n */\r\n  shouldComponentUpdate(nextProps, nextState){\r\n      return shallowEqualArrays(this.state.StateArray, nextState.StateArray);\r\n  }\r\n\r\n  stateChange = (flag) => {\r\n    if(flag == 'string'){\r\n      this.setState({StateString : 'react'}); // render 호출 x\r\n    }else if(flag == 'array'){\r\n      this.setState({SatateArray : ['react']}); // render 호출 o\r\n    }else{\r\n      this.setState({StateObject : {react : 'react'}}); // reder 호출 o\r\n    }\r\n  }\r\n\r\n  render(){\r\n    console.log(\"render 호출됨\");\r\n    return(\r\n      <div style={{padding:\"0px\"}}>\r\n          <button onClick={ () => this.stateChange('string') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('array') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('object') }>클릭</button> <br/>\r\n          state :: StateString : {this.state.StateString} <br/>\r\n          state :: StateArray : {this.state.StateArray.toString()} <br/>\r\n          state :: StateObject : {JSON.stringify(this.state.StateObject)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport {Pure , Shallow} ;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}