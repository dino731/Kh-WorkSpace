{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\11_Ref.js\",\n  _s = $RefreshSig$();\n/* \r\n    Ref ? reference의 약자. 참조변수\r\n    자바스크립트에서 html요소를 선택할 때\r\n    document.getElementById('아이디값')와 같은 선택 함수와 같이 요소를 가져온 후 조작하였다.\r\n\r\n    React에서는 위 방식에 더해서 Ref를 통해 html요소를 조작할 수 있도록 지원한다.\r\n */\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReactRef() {\n  _s();\n  const inputRef = useRef(null); // Ref변수 생성\n\n  const refFocus = () => {\n    console.log(inputRef, inputRef.current);\n    // inputRef.focus();\n  };\n\n  // 자바스크립트 방식 요소 선택\n  const javascriptFocus = () => {\n    document.getElementById(\"id1\").focus();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"id1\",\n      type: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"REF\",\n      onClick: refFocus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Javascript Focus\",\n      onClick: javascriptFocus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ReactRef, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = ReactRef;\nexport default ReactRef;\nvar _c;\n$RefreshReg$(_c, \"ReactRef\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","ReactRef","_s","inputRef","refFocus","console","log","current","javascriptFocus","document","getElementById","focus","children","id","type","ref","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["C:/react-workspace/my-app/src/11_Ref.js"],"sourcesContent":["/* \r\n    Ref ? reference의 약자. 참조변수\r\n    자바스크립트에서 html요소를 선택할 때\r\n    document.getElementById('아이디값')와 같은 선택 함수와 같이 요소를 가져온 후 조작하였다.\r\n\r\n    React에서는 위 방식에 더해서 Ref를 통해 html요소를 조작할 수 있도록 지원한다.\r\n */\r\nimport {useRef} from 'react';\r\n\r\nfunction ReactRef(){\r\n\r\n  const inputRef = useRef(null); // Ref변수 생성\r\n\r\n  const refFocus = () => {\r\n\r\n    console.log(inputRef, inputRef.current);\r\n    // inputRef.focus();\r\n\r\n  }\r\n\r\n  // 자바스크립트 방식 요소 선택\r\n  const javascriptFocus = () =>{\r\n    document.getElementById(\"id1\").focus();\r\n\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {/* \r\n          input 요소에 ref속성을 추가하고 inputRef 변수에 할당 시,\r\n          현재 input요소에 대한 정보를 inputRef를 통해 참조할 수 있다.\r\n      */} \r\n      <input id=\"id1\" type='text' ref={inputRef}/>\r\n      <input type=\"button\" value=\"REF\" onClick={refFocus}/>\r\n      <input type=\"button\" value=\"Javascript Focus\" onClick={javascriptFocus}/>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default ReactRef;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQA,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE/B,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;IAErBC,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAEA,QAAQ,CAACI,OAAO,CAAC;IACvC;EAEF,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAK;IAC3BC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC;EAExC,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBAKEd,OAAA;MAAOe,EAAE,EAAC,KAAK;MAACC,IAAI,EAAC,MAAM;MAACC,GAAG,EAAEZ;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5CrB,OAAA;MAAOgB,IAAI,EAAC,QAAQ;MAACM,KAAK,EAAC,KAAK;MAACC,OAAO,EAAEjB;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrDrB,OAAA;MAAOgB,IAAI,EAAC,QAAQ;MAACM,KAAK,EAAC,kBAAkB;MAACC,OAAO,EAAEb;IAAgB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACzE,CAAC;AAGP;AAACjB,EAAA,CA7BQD,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}