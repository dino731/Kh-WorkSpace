{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\my-app\\\\src\\\\13_Axios.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AxiosGet() {\n  _s();\n  useEffect(() => {\n    axios.get(\"http://date.jsontest.com\") // 비동기지만 동기적으로 먼저 자료를 불러오고\n    .then(response => {\n      // 이렇게 콜백 함수를 넣어준다.\n      alert(\"Axios Get : \" + response.data.date);\n    });\n    /* \r\n      get() : get방식으로 http호출. url호출이 완료되면 then()함수가 실행됨.\r\n      then() : 호출결과로 response데이터가 반환되면, response와 변수명 사이에\r\n      data를 붙이면 변수에 접근해서 사용할 수 있다.\r\n    */\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Axios Get Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_s(AxiosGet, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AxiosGet;\nfunction AxiosPost() {\n  _s2();\n  useEffect(() => {\n    axios.post(\"http://date.jsontest.com/\", {\n      a: 1,\n      b: 2\n    }).then;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Axios Post Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n_s2(AxiosPost, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = AxiosPost;\nexport { AxiosGet, AxiosPost };\nvar _c, _c2;\n$RefreshReg$(_c, \"AxiosGet\");\n$RefreshReg$(_c2, \"AxiosPost\");","map":{"version":3,"names":["axios","useEffect","jsxDEV","_jsxDEV","AxiosGet","_s","get","then","response","alert","data","date","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AxiosPost","_s2","post","a","b","_c2","$RefreshReg$"],"sources":["C:/react-workspace/my-app/src/13_Axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect } from 'react';\r\n\r\nfunction AxiosGet(){\r\n  useEffect(()=>{\r\n    axios.get(\"http://date.jsontest.com\") // 비동기지만 동기적으로 먼저 자료를 불러오고\r\n         .then( (response) =>{   // 이렇게 콜백 함수를 넣어준다.\r\n            alert(\"Axios Get : \"+response.data.date);\r\n           });\r\n        /* \r\n          get() : get방식으로 http호출. url호출이 완료되면 then()함수가 실행됨.\r\n          then() : 호출결과로 response데이터가 반환되면, response와 변수명 사이에\r\n          data를 붙이면 변수에 접근해서 사용할 수 있다.\r\n        */\r\n  },[]);\r\n\r\n  return <h1>Axios Get Test</h1>\r\n}\r\n\r\nfunction AxiosPost(){\r\n  useEffect( () =>{\r\n    axios.post(\"http://date.jsontest.com/\",{a:1, b:2})\r\n         .then\r\n  },[])\r\n\r\n  return <h1>Axios Post Test</h1>\r\n\r\n}\r\n\r\nexport {AxiosGet, AxiosPost};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACjBJ,SAAS,CAAC,MAAI;IACZD,KAAK,CAACM,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAAA,CAChCC,IAAI,CAAGC,QAAQ,IAAI;MAAI;MACrBC,KAAK,CAAC,cAAc,GAACD,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;IACzC,CAAC,CAAC;IACL;AACR;AACA;AACA;AACA;EACE,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAOR,OAAA;IAAAS,QAAA,EAAI;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAChC;AAACX,EAAA,CAdQD,QAAQ;AAAAa,EAAA,GAARb,QAAQ;AAgBjB,SAASc,SAASA,CAAA,EAAE;EAAAC,GAAA;EAClBlB,SAAS,CAAE,MAAK;IACdD,KAAK,CAACoB,IAAI,CAAC,2BAA2B,EAAC;MAACC,CAAC,EAAC,CAAC;MAAEC,CAAC,EAAC;IAAC,CAAC,CAAC,CAC5Cf,IAAI;EACZ,CAAC,EAAC,EAAE,CAAC;EAEL,oBAAOJ,OAAA;IAAAS,QAAA,EAAI;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAEjC;AAACG,GAAA,CARQD,SAAS;AAAAK,GAAA,GAATL,SAAS;AAUlB,SAAQd,QAAQ,EAAEc,SAAS;AAAE,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}