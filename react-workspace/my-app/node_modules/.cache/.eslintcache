[{"C:\\react-workspace\\my-app\\src\\index.js":"1","C:\\react-workspace\\my-app\\src\\App.js":"2","C:\\react-workspace\\my-app\\src\\reportWebVitals.js":"3","C:\\react-workspace\\my-app\\src\\01_Lifecycle.js":"4","C:\\react-workspace\\my-app\\src\\02_PropsDataType.js":"5","C:\\react-workspace\\my-app\\src\\App2.js":"6","C:\\react-workspace\\my-app\\src\\03_PropsNode.js":"7","C:\\react-workspace\\my-app\\src\\04_StateAndEvent.js":"8","C:\\react-workspace\\my-app\\src\\App3.js":"9","C:\\react-workspace\\my-app\\src\\05_PureComponent.js":"10","C:\\react-workspace\\my-app\\src\\06_FunctionComponent.js":"11","C:\\react-workspace\\my-app\\src\\07_Fragements.js":"12","C:\\react-workspace\\my-app\\src\\08_SpreadOperator.js":"13","C:\\react-workspace\\my-app\\src\\todoApp.js":"14","C:\\react-workspace\\my-app\\src\\TodoList.js":"15","C:\\react-workspace\\my-app\\src\\App4.js":"16","C:\\react-workspace\\my-app\\src\\09_Context.js":"17","C:\\react-workspace\\my-app\\src\\ContextChildren1.js":"18","C:\\react-workspace\\my-app\\src\\ContextChildren2.js":"19","C:\\react-workspace\\my-app\\src\\ContextChildren3.js":"20","C:\\react-workspace\\my-app\\src\\10_RouterComponent.js":"21","C:\\react-workspace\\my-app\\src\\router\\ReactRouter1.js":"22","C:\\react-workspace\\my-app\\src\\router\\NoMatch.js":"23","C:\\react-workspace\\my-app\\src\\router\\ReactRouter2.js":"24","C:\\react-workspace\\my-app\\src\\router\\ReactRouter3.js":"25","C:\\react-workspace\\my-app\\src\\11_Ref.js":"26","C:\\react-workspace\\my-app\\src\\FetchApp.js":"27","C:\\react-workspace\\my-app\\src\\12_Fetch.js":"28","C:\\react-workspace\\my-app\\src\\13_Axios.js":"29","C:\\react-workspace\\my-app\\src\\14_Callback.js":"30","C:\\react-workspace\\my-app\\src\\15_Hoc.js":"31","C:\\react-workspace\\my-app\\src\\withLogging.js":"32"},{"size":1223,"mtime":1690352321728,"results":"33","hashOfConfig":"34"},{"size":2327,"mtime":1690176755833,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":1690159515111,"results":"36","hashOfConfig":"34"},{"size":4686,"mtime":1690207707421,"results":"37","hashOfConfig":"34"},{"size":2191,"mtime":1690175784739,"results":"38","hashOfConfig":"34"},{"size":1034,"mtime":1690177247110,"results":"39","hashOfConfig":"34"},{"size":221,"mtime":1690180430727,"results":"40","hashOfConfig":"34"},{"size":1715,"mtime":1690209683584,"results":"41","hashOfConfig":"34"},{"size":567,"mtime":1690251459495,"results":"42","hashOfConfig":"34"},{"size":4349,"mtime":1690182873523,"results":"43","hashOfConfig":"34"},{"size":5318,"mtime":1690331660909,"results":"44","hashOfConfig":"34"},{"size":804,"mtime":1690249872634,"results":"45","hashOfConfig":"34"},{"size":1722,"mtime":1690252981192,"results":"46","hashOfConfig":"34"},{"size":117,"mtime":1690254181649,"results":"47","hashOfConfig":"34"},{"size":1603,"mtime":1690263684033,"results":"48","hashOfConfig":"34"},{"size":342,"mtime":1690352555341,"results":"49","hashOfConfig":"34"},{"size":1783,"mtime":1690268920685,"results":"50","hashOfConfig":"34"},{"size":133,"mtime":1690268693982,"results":"51","hashOfConfig":"34"},{"size":397,"mtime":1690268522601,"results":"52","hashOfConfig":"34"},{"size":434,"mtime":1690268720970,"results":"53","hashOfConfig":"34"},{"size":1992,"mtime":1690338924604,"results":"54","hashOfConfig":"34"},{"size":318,"mtime":1690337073202,"results":"55","hashOfConfig":"34"},{"size":353,"mtime":1690337543734,"results":"56","hashOfConfig":"34"},{"size":240,"mtime":1690338207561,"results":"57","hashOfConfig":"34"},{"size":1926,"mtime":1690339762297,"results":"58","hashOfConfig":"34"},{"size":1348,"mtime":1690352505751,"results":"59","hashOfConfig":"34"},{"size":369,"mtime":1690350483732,"results":"60","hashOfConfig":"34"},{"size":2562,"mtime":1690343429508,"results":"61","hashOfConfig":"34"},{"size":1166,"mtime":1690348798956,"results":"62","hashOfConfig":"34"},{"size":2467,"mtime":1690351647400,"results":"63","hashOfConfig":"34"},{"size":436,"mtime":1690352158554,"results":"64","hashOfConfig":"34"},{"size":315,"mtime":1690352352460,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ghzzfa",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"73"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\react-workspace\\my-app\\src\\index.js",["172","173","174","175"],[],"C:\\react-workspace\\my-app\\src\\App.js",["176","177"],[],"import './App.css';\nimport {Lifecycle} from './01_Lifecycle';\nimport PropsDataType from './02_PropsDataType';\n\n\n/*\n  리액트란? 컴포넌트\n  UI를 구축하는 JS라이브러리 겸 프레임워크. 동적으로 사용자가 보게될 화면을 꾸밀 수 있다.\n  \n  컴포넌트 ? \n  UI구성을 확장성있고, 유연하게 만들어주기 위해 만들어짐. 화면을 이루는 구성요소\n  하나하나를 컴포넌트라는 블럭단위로 포장해서 재사용성을 늘렸다.\n\n  리액트에서는 화면의 모든 구성요소를 컴포넌트로 표현할 수 있다.\n\n  JSX(JavaScriptXML)문법 : JavaScript의 문법 안에서 html요소가 함께 들어가있는 형태의 언어.\n  리액트에서 ui를 구성하기 위해 보편적으로 사용되는 문법.\n  자바스크립트의 문법을 통해 html요소를 생성하는 역할을 함.\n\n  document.creatElement(\"div\") -> (명령적 방식)\n\n  JSX문법은 선언적 방식. 개발자가 복잡한 자바스크립트 코드를 짤 필요 없이 동적으로\n  추가되느 DOM요소를 단순한 코드 선언만으로 만들 수 있다.\n  <div> <- 이런식으로 \n    <h2></h2>\n  </div>\n\n  내가 작성한 JSX문법의 코드가 실제로 실행될때는 리액트가 브라우저에서 구동되고 있는\n  자바스크립트 코드로 자동으로 컴파일 되면서 실행이 된다.\n*/\nfunction App() {\n  // 자바스크립트 영역\n  <h2>js영역</h2>\n  const str = \"Hello World\";\n  return (\n    <div>\n        {/* jsx문법 영역 안에서 주석을 사용하는 방법. jsx문법 안에서의 중괄호는 js영역으로 인식이 된다. <자바스크립트 영역임> */}\n        {/* <h2>{str}</h2> */}\n        {/* <Lifecycle props_value=\"From App.js\"/> */}\n        {/* \n          props? 부모컴포넌트가 자식 컴포넌트에 넘겨주는 \"객체\" 형태의 데이터\n          자식 컴포넌트의 시작 태그에 작성하는 속성은 key값으로, 속성값은 value값의 형태로 넘어간다.\n        */}\n        <PropsDataType\n          String=\"react\"\n          Number={100}\n          Boolean\n          Array={[0,1,8]}\n          Object={{react : \"리액트\", today:20230724}}\n          Function={console.log}\n          StringDefault\n        >\n\n        </PropsDataType>\n\n\n    </div>\n  );\n}\n\nexport default App;\n",[],"C:\\react-workspace\\my-app\\src\\reportWebVitals.js",[],[],"C:\\react-workspace\\my-app\\src\\01_Lifecycle.js",[],[],"C:\\react-workspace\\my-app\\src\\02_PropsDataType.js",["178"],[],"import datatype from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\n\r\n/*  \r\n  prop-types?\r\n  일반적으로 자바스크립트의 유연한 특성은 개발을 하는데 있어 도움을 주지만,\r\n  관리해야할 파일이 많아지면 생산성 및 유지 보수성이 떨어진다라는 단점이 있음.\r\n\r\n  이런점 때문에 명확한 자료형으로 개발을 해야하는 타입스크립트가 각광받고 있는 추세인데\r\n  반드시 자바스크립트로 개발을 해야만 하는 상황에서는 propTypes를 활용해서 해결할 수 있다.\r\n\r\n  PropTypes는 부모로부터 전달받은 props의 데티어틔 type(자료형)을 검사해준다\r\n  자식 컴포넌트에서 명시해 놓은 데이터타입과 부모로부터 넘겨받은 데이터 타입이 일치하지 않으면 콘솔에 경고를 띄워준다.\r\n*/\r\nclass PropsDataType extends Component{\r\n  render(){\r\n      let {String, Number, Boolean, Array, Object, Function, StringDefault} = this.props;\r\n      // 구조분해할당 -> 객체를 변수로 저장하는 ES6방식 문법\r\n      console.log(this.props);\r\n      return( // 값을 반드시 하나만 return 해야 에러가 발생하지 않는다.\r\n        <div style={{padding:\"0px\"}}>\r\n          <p>StringProps : {String}</p>\r\n          <p>NumberProps : {Number}</p>\r\n          <p>BooleanProps : {Boolean.toString()}</p>\r\n          <p>ArrayProps : {Array.toString()}</p>\r\n          <p>Object : {JSON.stringify(Object)}</p>\r\n          <p>FunctionProps : {Function(\"react\")}</p>\r\n          <p>StringDefaultProps : {StringDefault}</p>\r\n        </div> \r\n      )\r\n  }\r\n}\r\nPropsDataType.Propstypes={\r\n  // 대입되는 값의 자료형을 명확하게 일치시켜서 전달해줘야한다.\r\n  String : datatype.string.isRequired,\r\n  Number : datatype.number,\r\n  Boolean : datatype.bool,\r\n  Array : datatype.array,\r\n  Object : datatype.object,\r\n  // 객체 내부의 자료형을 선언할때는 shape유형을 사용\r\n  Object : datatype.shape({\r\n    react : datatype.string,\r\n    today : datatype.number\r\n  }),\r\n  Function : datatype.func\r\n}\r\nPropsDataType.defaultProps ={\r\n  StringDefault :  \"기본값\"\r\n}\r\nexport default PropsDataType;","C:\\react-workspace\\my-app\\src\\App2.js",["179"],[],"import './App.css'\r\n\r\nimport PropNode from './03_PropsNode';\r\nimport StateAndEvent from './04_StateAndEvent';\r\n\r\n/* \r\n  자식 컴포넌트에게 node 전달하기\r\n  node란??\r\n  HTML문서를 구성하는 각요소들을 Node라고 부른다.\r\n\r\n  Documnet -> Document node,\r\n  각 요소 객체 (html, head, body, p, div, ... ) -> element node(Document의 자식)\r\n  각 요소의 속성 (id, class, name, ...  ) -> attribute node\r\n  (element요소의 자식 노드는 아니고 같은 레벨의 노드)\r\n  텍스트 => textNode,\r\n  주석  => comment node\r\n\r\n  모두 노드이면서 계층구조를 가지고 있음.\r\n  ex) Documnet아래 hmlt 아래 head, body태그 아래 각 노드들이 계층적으로 존재함.\r\n\r\n\r\n */\r\n\r\n  function App2(){\r\n    return(\r\n      <div>\r\n        {/* <PropNode >\r\n            <span id=\"attribute\">node from App2.js</span>\r\n            <span id=\"attribute2\">node2 from App2.js</span>\r\n\r\n          </PropNode> */}\r\n          <StateAndEvent/>\r\n      </div>\r\n    )\r\n  }\r\n  export default App2;\r\n","C:\\react-workspace\\my-app\\src\\03_PropsNode.js",[],[],"C:\\react-workspace\\my-app\\src\\04_StateAndEvent.js",[],[],"C:\\react-workspace\\my-app\\src\\App3.js",["180","181","182","183","184","185"],[],"import './App.css';\r\nimport {Pure, Shallow} from './05_PureComponent';\r\nimport { TestUseCallback, TestUseEffect, TestUseState } from './06_FunctionComponent';\r\nimport Fragements from './07_Fragements';\r\nimport Spread from './08_SpreadOperator';\r\n\r\nfunction App3(){\r\n  return(\r\n    // <Pure />\r\n    // <Shallow/>\r\n    // <TestUseState/>\r\n    // <TestUseEffect/>\r\n    // <TestUseCallback/>\r\n    // <table>\r\n    //   <thead>\r\n    //     <tr>\r\n    //       <Fragements/>\r\n    //     </tr>\r\n    //   </thead>\r\n    // </table>\r\n    <Spread/>\r\n\r\n  )\r\n}\r\nexport default App3;","C:\\react-workspace\\my-app\\src\\05_PureComponent.js",["186","187","188","189","190"],[],"import { Component, PureComponent } from 'react';\r\nimport {shallowEqualObjects, shallowEqualArrays} from 'shallow-equal';\r\n\r\n/* \r\n    1. PureCompnent?\r\n    class형 컴포넌트는 Component와 PureComponent가 있다.\r\n\r\n    두 함수 모두 props와 state의 변경에 따라 render함수를 호출하는데 호출을 하는 기준이 약간 다르다.\r\n\r\n    Component에서는 setState함수 호출 시 내부적으로 변경하고자 하는 state의 값이 같더라도\r\n    항상 render()함수를 호출하였다.\r\n\r\n    PureComponent에서는 바꿀 값 자체를 실제로 비교하여 값이 동일한 경우 변경되지 않았다고 간주하고 render함수를 호출하지 않는다.\r\n\r\n    Component와 비교해 봤을 때 불필요한 화면 변환이 발생하지 않으므로 약간이지만 페이지 성능을 향상시킬 수 있다.\r\n */\r\nclass Pure extends PureComponent{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        StateString : 'react',\r\n        StateArray : ['react'],\r\n        StateObject : {react : 'react'}\r\n    }\r\n  }\r\n  stateChange = (flag) => {\r\n    if(flag == 'string'){\r\n      this.setState({StateString : 'react'}); // render 호출 x\r\n    }else if(flag == 'array'){\r\n      this.setState({StateArray : ['react']}); // render 호출 o\r\n    }else{\r\n      this.setState({StateObject : {react : 'react'}}); // reder 호출 o\r\n    }\r\n  }\r\n  /* \r\n    객체의 경우 변수 값이 아니라 객체의 주소값을 통해 비교를 수행하기 때문에 \r\n    기존 state에 담겨있던 StateObject나 StateArray는 서로 완전 다른 값이라고 판단하고 render메서드가 호출됨\r\n   */\r\n  render(){\r\n    console.log(\"render 호출됨\");\r\n    return(\r\n      <div style={{padding:\"0px\"}}>\r\n          <button onClick={ () => this.stateChange('string') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('array') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('object') }>클릭</button> <br/>\r\n          state :: StateString : {this.state.StateString} <br/>\r\n          state :: StateArray : {this.state.StateArray.toString()} <br/>\r\n          state :: StateObject : {JSON.stringify(this.state.StateObject)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Shallow extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n        StateString : 'react',\r\n        StateArray : ['react'],\r\n        StateObject : {react : 'react'}\r\n    }\r\n  }\r\n  /* \r\n      컴포넌트 라이프 사이클중 변경과 관련된 메소드\r\n      반환값에 따라 컴포넌트를 업데이트 할지 (true), 말지 (false) 결정함\r\n */\r\n  shouldComponentUpdate(nextProps, nextState){\r\n      // return shallowEqualArrays(this.state.StateArray, nextState.StateArray);\r\n      return !shallowEqualObjects(this.state.StateObject, nextState.StateObject);\r\n      /* \r\n          shallow-equal패키지 안에는 PureComponent에서 state값의 변경을 비교하는 것과 동일한 기능을 수행하는 함수를 제공해준다.\r\n          \r\n          1. shallowEqualArrays() : 배열은 \"값\"만을 가지고 비교를 수행함.\r\n                                    내부의 값이 모두 일치하면 true, 일치하지 않으면 false을 반환함.\r\n          2. shallowEqualObjects() : 객체를 비교할 때 동일한 키의 '값'만을 가지고 비교\r\n       */\r\n  }\r\n\r\n  stateChange = (flag) => {\r\n    if(flag == 'string'){\r\n      this.setState({StateString : 'react'}); // render 호출 x\r\n    }else if(flag == 'array'){\r\n      this.setState({StateArray : ['react']}); // render 호출 o\r\n    }else{\r\n      this.setState({StateObject : {react : 'react'}}); // reder 호출 o\r\n    }\r\n  }\r\n\r\n  render(){\r\n    console.log(\"render 호출됨\");\r\n    return(\r\n      <div style={{padding:\"0px\"}}>\r\n          <button onClick={ () => this.stateChange('string') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('array') }>클릭</button> <br/>\r\n          <button onClick={ () => this.stateChange('object') }>클릭</button> <br/>\r\n          state :: StateString : {this.state.StateString} <br/>\r\n          state :: StateArray : {this.state.StateArray.toString()} <br/>\r\n          state :: StateObject : {JSON.stringify(this.state.StateObject)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\nexport {Pure , Shallow} ;","C:\\react-workspace\\my-app\\src\\06_FunctionComponent.js",["191","192"],[],"/*\r\n  함수형 컴포넌트.\r\n  return값이 있는 function과 동일한 구조의 컴포넌트\r\n  부모 컴포넌트에게서 props로 파라미터를 전달 받아 사용할 수도 있다.\r\n  render함수가 없기 때문에 return만을 사용하여 화면을 그려준다.\r\n\r\n  state가 없고, 생명주기 함수를 사용할 수가 없음\r\n  \r\n  함수형 컴포넌트에서 state와 생명주기 함수의 기능을 사용해야하는 경우 비슷한\r\n  기능을 제공하는 hook을 추가하면 된다.\r\n\r\n  대표적인 hook함수\r\n  [1] useState() : state변수 값을 선언하게 해주는 메소드. (setState메서드와 비슷한 역할)\r\n\r\n  [2] useEffect(콜백함수) : 생명주기함수중 componentDidMount와 비슷한 역할을 함\r\n\r\n  [3] useCallback(콜백함수) : 매개변수로 들어간 콜백함수를 캐시에 저장하여 빠르게 해당 함수를 실행할 수 있게 도와준다 (성능 최적화에 사용)\r\n\r\n  캐시? 데이터나 값을 미리 저장하는 저장소. 빠르게 저장된 값을 가져오고자할 때 사용한다.\r\n  리액트 훅에서는 전역변수를 캐시에 저장하여 상태값을 가질 수 있게끔 컨트롤함.\r\n\r\n  [장점]\r\n  class 컴포넌보다 가볍다\r\n  class 컴포넌트는 랜더 함수를 통해 직접 랜더링한다\r\n  루트에서 랜더링하는게 더 빠르다\r\n\r\n*/\r\nimport {useState, useEffect, usecallback, useCallback} from 'react';\r\n\r\nfunction TestUseState(){\r\n/* \r\n    [1] useState() : state변수 값을 선언하게 해주는 메소드\r\n\r\n    [표현법]\r\n    const [값을 담을 변수, 값을 변경하는 setter함수] = useState(초기값);\r\n    useState메서드는 길이 2짜리 배열을 반환해주며, 이를 구조분해할당을 이용하여 반환된 값을 저장\r\n\r\n    반환된 값을 담아줄 첫 번째 인자(count) : state의 변수명\r\n    반환된 값을 담아줄 두 번째 인자(setCount) : count값을 변경해주는 함수를 저장 (setState와 비슷한 역할)\r\n */\r\n  const [count, setCount ] = useState(0);\r\n  //count 변수에 초기값으로 0으로 설정 -> this.state = {count : 0}\r\n  // setCount함수는 state값 중 count를 변경해주는 함수를 정장 -> this.setState({count : x})\r\n\r\n  // count값을 증가시키는 메서드 increment\r\n // const increment = () => setCount(count+1);\r\n function increment(){\r\n  return setCount(count+1);\r\n }\r\n\r\n  return(\r\n    <div>\r\n      <button onClick={increment}>증가</button>\r\n      count :: {count}\r\n    </div>\r\n  )\r\n\r\n\r\n\r\n}\r\nfunction TestUseEffect(){\r\n  /* \r\n    [2] useeffect(): 생명주기 함수중 componentDidMount와 동일한 역할을 함.\r\n    최초 페이지 로딩시 한번은 무조건 실행되고, \"의존성 목록\"이 바뀔때마다 다시 한 번 실행된다.\r\n\r\n    [표현법]\r\n    useEffect(\r\n      () => {\r\n          // 랜더링이 완료된 후 실행할 코드.\r\n          return 컴포넌트가 언마운트 될 때 실행할 코드(componentWilUnMount와 동일한 역할)\r\n      }, [의존성 목록]\r\n    )\r\n    useEffect의 반환값으로 다시 한 번 콜백함수를 반환하게 되면 컴포넌트가 소멸할 때 해당 함수를 실행시킨다 (componentWillUnMount)\r\n\r\n    * 자주 사용하길 권장함 mkm.\r\n */\r\n    const [count,setCount] = useState(0);\r\n    const increment = () => setCount(count+1);\r\n    useEffect(\r\n      ()=>{\r\n        // 페이지 랜더링이 완료된 후, id값이 btn1인 요소를 찾아서 이벤트 부여\r\n        const btn1 = document.getElementById(\"btn1\");\r\n        if(btn1){\r\n          btn1.addEventListener('click',increment);\r\n          return () => btn1.removeEventListener('click',increment);\r\n          // 컴포넌트가 소멸할 때 추가한 이벤트 제거.\r\n          // 이벤트를 사용했으면 쌓이는 걸 방지하기 위해 지우는게 중요하다. 나중에 나도 모르게 동일한 요소를 생성했을때 이벤트가 부여되는 경우가 있음.\r\n          // 이러한 과정은 최적화라고도 한다.\r\n        }\r\n      },[count]\r\n    );\r\n      /* \r\n      * 의존성 ? 캐시를 갱신시킬 요소. 리액트에서는 의존성 목록중 어느것 하나라도 충족되면 (값이 변경)\r\n        캐시된 값을 자동으로 갱신하고 컴포넌트를 다시 랜더링하여 변경사항을 반영함.\r\n        보통 useState로 선언한 state상태값을 넣어줘서 state값의 변경이 있을 때 캐시를 갱신시키고, 페이지를 재 랜더링 시킨다.\r\n        (사용하지 않아도 무관하지만 페이지가 복잡해질 수록 쓰는게 좋다)\r\n      */\r\n  return(\r\n\r\n    <div>\r\n      <button id='btn1'>increment</button>\r\n      count :: {count}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction TestUseCallback(){\r\n  /*\r\n    [3] useCallback(원본 콜백 함수, 의존성 목록) : 프로그램 성능 최적화 작업에 사용되며,\r\n                                                    함수의 몸통(실행할 코드)를 캐싱하는데 사용한다.\r\n\r\n */\r\nconst [count, setCount] = useState(0);\r\nconst increment = useCallback( \r\n      () => {\r\n        setCount(count+1)\r\n      },[count]\r\n  );\r\n\r\nreturn(\r\n  <div>\r\n    <button onClick={increment}>증가</button>\r\n    count :: {count}\r\n  </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport {TestUseState, TestUseEffect, TestUseCallback};","C:\\react-workspace\\my-app\\src\\07_Fragements.js",[],[],"C:\\react-workspace\\my-app\\src\\08_SpreadOperator.js",["193","194"],[],"import { useCallback, useState } from \"react\";\r\n/* \r\n    전개연산자?\r\n    ...점 3개를 연달아서 사용하는 연산자로 여러개의 객체를 '병합'하여\r\n    한개의 객체로 만들려고 할 때 사용. (깊은 복사를 일으킨다)\r\n\r\n    얕은 복사 -> 주소값만 복사하는 것으로 , 복사본에서 작업, 수정한 내용이 원본에 영향을 끼치는 복사\r\n */\r\n\r\nconst jeans = [1,2,3]; // \r\nconst newJeans = [...jeans,4,5]; // [1,2,3,4,5]\r\n// 전개 연산자를 활용한 이미지 추가기능\r\nfunction Spread(){\r\n  const [images, setImages] = useState([]);\r\n  // images 변수에 빈 배열 등록\r\n\r\n  const addImage = useCallback(() =>{\r\n      const random = randomImages();\r\n      const newImage = {\r\n        id : random,\r\n        src : `./img/flower${random}.jpg` \r\n        // 정적인 이미지 파일들은 모두 public 패키지안에 보관한다. 현재 위치는 public이다.\r\n      }\r\n      setImages([...images, newImage]);\r\n      /* \r\n          state의 images변수에 이전 값들(...images)과 새롭게 생성된 이미지 객체를 함께 전달하여 수정한다.\r\n      */\r\n  },[images]);\r\n\r\n  const clearImage = () => {setImages([])};\r\n  const randomImages = () => Math.ceil(Math.random()*5);\r\n  // [].map(콜백 함수)\r\n  return(\r\n   \r\n    <>\r\n      {console.log(images)}\r\n      {\r\n        images.map(\r\n          (img) => <img src={img.src}/>  // 꺽쇠? 중괄호 가 return을 대신함 저게 없으면 return을 작성해줘야한다.\r\n        )\r\n\r\n      }\r\n      <button id='add' onClick={addImage}>이미지 추가</button>\r\n      <button id='clear' onClick={clearImage}>이미지 삭제</button>\r\n    </>\r\n  )\r\n\r\n}\r\nexport default Spread;","C:\\react-workspace\\my-app\\src\\todoApp.js",[],[],"C:\\react-workspace\\my-app\\src\\TodoList.js",["195","196"],[],"import {useState, useCallback} from 'react';\r\n\r\nfunction TodoList(){\r\n  // useState를 활용하여 todolist를 state에 저장\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  // todolist 추가기능\r\n  const handleAddTodo = useCallback(() => {\r\n    const newtodos = document.getElementById(\"intodo\").value;\r\n    setTodos([...todos,newtodos]);\r\n\r\n  },[todos]);\r\n\r\n  // 완료한 투두리스트 삭제기능.\r\n  const handleDeleteTodo = (index) => {\r\n    const todolist = [...todos];\r\n    todolist.splice(index,1);\r\n    setTodos(todolist);\r\n   \r\n  };\r\n\r\n  const style = {\r\n    listStyle : \"none\"\r\n  }\r\n  const enter = (e) =>{\r\n    if(e.key == 'Enter'){\r\n      handleAddTodo();\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n        <h2>Todo List</hr\n        <input type=\"text\" id=\"intodo\" onKeyDown={enter}/>\r\n        <button onClick={handleAddTodo}>추가</button>\r\n        <ul>\r\n        {todos.map((todo, index) => (\r\n          <li style={style} key={index}>{todo}<a onClick={() => handleDeleteTodo(index)}>✅</a></li>\r\n        ))}\r\n        </ul>\r\n    </div>\r\n  )\r\n  \r\n}\r\nexport default TodoList;","C:\\react-workspace\\my-app\\src\\App4.js",["197","198"],[],"C:\\react-workspace\\my-app\\src\\09_Context.js",[],[],"C:\\react-workspace\\my-app\\src\\ContextChildren1.js",[],[],"C:\\react-workspace\\my-app\\src\\ContextChildren2.js",["199"],[],"import {useContext} from 'react'; // 부모컴포넌트의 데이터를 사용하기 위해 필요한 함수\r\nimport { MyContext } from './09_Context';\r\nimport Children3 from './ContextChildren3';\r\n\r\nfunction Children2(){\r\n  const contextValue = useContext(MyContext);\r\n  // return <h3>{`contextValue: ${JSON.stringify(contextValue)}`}</h3>\r\n  return <Children3/>\r\n\r\n\r\n}\r\nexport default Children2;","C:\\react-workspace\\my-app\\src\\ContextChildren3.js",[],[],"C:\\react-workspace\\my-app\\src\\10_RouterComponent.js",[],[],"C:\\react-workspace\\my-app\\src\\router\\ReactRouter1.js",[],[],"C:\\react-workspace\\my-app\\src\\router\\NoMatch.js",[],[],"C:\\react-workspace\\my-app\\src\\router\\ReactRouter2.js",[],[],"C:\\react-workspace\\my-app\\src\\router\\ReactRouter3.js",[],[],"C:\\react-workspace\\my-app\\src\\11_Ref.js",[],[],"C:\\react-workspace\\my-app\\src\\FetchApp.js",["200","201","202","203","204"],[],"C:\\react-workspace\\my-app\\src\\12_Fetch.js",[],[],"C:\\react-workspace\\my-app\\src\\13_Axios.js",[],[],"C:\\react-workspace\\my-app\\src\\14_Callback.js",["205"],[],"C:\\react-workspace\\my-app\\src\\15_Hoc.js",[],[],"C:\\react-workspace\\my-app\\src\\withLogging.js",[],[],{"ruleId":"206","severity":1,"message":"207","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":11},{"ruleId":"206","severity":1,"message":"210","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":12},{"ruleId":"206","severity":1,"message":"211","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":12},{"ruleId":"206","severity":1,"message":"212","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":15},{"ruleId":"206","severity":1,"message":"213","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"214","line":34,"column":9,"nodeType":"208","messageId":"209","endLine":34,"endColumn":12},{"ruleId":"215","severity":1,"message":"216","line":42,"column":3,"nodeType":"217","messageId":"218","endLine":42,"endColumn":9},{"ruleId":"206","severity":1,"message":"219","line":3,"column":8,"nodeType":"208","messageId":"209","endLine":3,"endColumn":16},{"ruleId":"206","severity":1,"message":"220","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":13},{"ruleId":"206","severity":1,"message":"221","line":2,"column":15,"nodeType":"208","messageId":"209","endLine":2,"endColumn":22},{"ruleId":"206","severity":1,"message":"222","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":25},{"ruleId":"206","severity":1,"message":"223","line":3,"column":27,"nodeType":"208","messageId":"209","endLine":3,"endColumn":40},{"ruleId":"206","severity":1,"message":"224","line":3,"column":42,"nodeType":"208","messageId":"209","endLine":3,"endColumn":54},{"ruleId":"206","severity":1,"message":"225","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":18},{"ruleId":"206","severity":1,"message":"226","line":2,"column":30,"nodeType":"208","messageId":"209","endLine":2,"endColumn":48},{"ruleId":"227","severity":1,"message":"228","line":27,"column":13,"nodeType":"229","messageId":"218","endLine":27,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":29,"column":19,"nodeType":"229","messageId":"218","endLine":29,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":79,"column":13,"nodeType":"229","messageId":"218","endLine":79,"endColumn":15},{"ruleId":"227","severity":1,"message":"228","line":81,"column":19,"nodeType":"229","messageId":"218","endLine":81,"endColumn":21},{"ruleId":"206","severity":1,"message":"230","line":28,"column":30,"nodeType":"208","messageId":"209","endLine":28,"endColumn":41},{"ruleId":"231","severity":1,"message":"232","line":90,"column":9,"nodeType":"233","endLine":90,"endColumn":16,"suggestions":"234"},{"ruleId":"206","severity":1,"message":"235","line":11,"column":7,"nodeType":"208","messageId":"209","endLine":11,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":39,"column":20,"nodeType":"238","endLine":39,"endColumn":40},{"ruleId":"227","severity":1,"message":"228","line":26,"column":14,"nodeType":"229","messageId":"218","endLine":26,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":38,"column":47,"nodeType":"238","endLine":38,"endColumn":90},{"ruleId":"206","severity":1,"message":"241","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":19},{"ruleId":"206","severity":1,"message":"242","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":23},{"ruleId":"206","severity":1,"message":"243","line":6,"column":9,"nodeType":"208","messageId":"209","endLine":6,"endColumn":21},{"ruleId":"206","severity":1,"message":"244","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"245","line":2,"column":20,"nodeType":"208","messageId":"209","endLine":2,"endColumn":29},{"ruleId":"206","severity":1,"message":"246","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":17},{"ruleId":"206","severity":1,"message":"247","line":3,"column":19,"nodeType":"208","messageId":"209","endLine":3,"endColumn":28},{"ruleId":"206","severity":1,"message":"248","line":4,"column":10,"nodeType":"208","messageId":"209","endLine":4,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":46,"column":4,"nodeType":"251","messageId":"252","endLine":54,"endColumn":11,"fix":"253"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'App2' is defined but never used.","'App3' is defined but never used.","'TodoApp' is defined but never used.","'Lifecycle' is defined but never used.","'str' is assigned a value but never used.","no-dupe-keys","Duplicate key 'Object'.","ObjectExpression","unexpected","'PropNode' is defined but never used.","'Pure' is defined but never used.","'Shallow' is defined but never used.","'TestUseCallback' is defined but never used.","'TestUseEffect' is defined but never used.","'TestUseState' is defined but never used.","'Fragements' is defined but never used.","'shallowEqualArrays' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'usecallback' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'increment'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'newJeans' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ContextApi' is defined but never used.","'RouterComponent' is defined but never used.","'contextValue' is assigned a value but never used.","'FetchGet' is defined but never used.","'FetchPost' is defined but never used.","'AxiosGet' is defined but never used.","'AxiosPost' is defined but never used.","'Callback' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"255","text":"256"},{"desc":"257","fix":"258"},[1349,1351],".","Update the dependencies array to be: [count, increment]",{"range":"259","text":"260"},[2537,2544],"[count, increment]"]