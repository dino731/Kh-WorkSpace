{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-workspace\\\\react-tst\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { BrowserRouter as Router, Link, Routes, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport Home from './Home';\nimport CreateMovie from './CreateMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // 영화 게시판의 기본데이터 + ,setter 함수\n  const [movies, setMovies] = useState([{\n    id: 1,\n    title: '오펜하이머',\n    genre: '서사',\n    release_date: '2023-08-17'\n  }, {\n    id: 2,\n    title: '콘크리트유토피아',\n    genre: '스릴러',\n    release_date: '2023-08-10'\n  }, {\n    id: 3,\n    title: '엘리먼트',\n    genre: '판타지',\n    release_date: '2023-07-15'\n  }]);\n  // 새로운 영화 정보를 저장할 객체 -> CreateMovie 컴포넌트에 넘겨줄 예정\n  const [newMovie, setNewMovie] = useState({\n    id: '',\n    title: '',\n    genre: '',\n    release_date: ''\n  });\n\n  // CreateMovie 컴포넌트의 각 인풋태그에 추가할 이벤트 핸들러\n  // input 태그의 값이 바뀔때마다 (change) newMovie객체에 각 프로퍼티에 변경된 값들로 초기화 시킬 예정\n  // ex) 영화의 제목(title)값 수정을 한다면 newMovie의 title프로퍼티에 값을 변경시켜주는 기능 (부가적인 기능이다)\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewMovie({\n      ...newMovie,\n      [name]: value\n    });\n  };\n\n  // 영화 등록 메서드 -> 요효성 검사를 통과하면 setMovie함수를 호출하여 movies 상태값을 변경해줌\n  const handleAddMovie = () => {\n    // newMovie의 각 프로퍼티 중 빈 값이 있는지 검사 \n    // 자바스크립트에서 빈 문자열은 ( '' == false) 이렇게 읽힌다\n    if (!newMovie.id || !newMovie.title || !newMovie.genre || !newMovie.release_date) {\n      alert(\"모근 값을 바르게 입력해주세요.\");\n      return;\n    }\n    // movies 객체 배열 안에 현재 추가하고자 하는 id값과 동일한 객체가 있는지 확인한다.\n    // isDuplicate 중복을 확인해주는 함수\n    const isDuplicate = movies.some(move => String(movie.id) === newMovie.id);\n    if (isDuplicate) {\n      alert(\"이미 존재하는 ID입니다. 다시 입력해주세요.\");\n      setNewMovie({\n        ...newMovie,\n        ['id']: ''\n      }); // id값만 비워준다. (빈문자열로 바꿔줌)\n      return;\n    }\n    setMovies([...movies, newMovie]);\n    setNewMovie({\n      id: '',\n      title: '',\n      genre: '',\n      release_date: ''\n    });\n  };\n\n  // 영화 삭제 메서드 -> 투두리스트와 동일\n  const handleDeleteMovie = id => {\n    const updatedMovies = movies.fileter(movie => movie.id !== id);\n    setMovies(updatedMovies);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/create\",\n              children: \"Add New Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            movies: movies,\n            onDeleteMovie: handleDeleteMovie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateMovie, {\n            newMovie: newMovie,\n            onInput: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"aOlsQu5Jd+h1af2VPoj4ZFxicvU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Link","Routes","Route","useState","Home","CreateMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","id","title","genre","release_date","newMovie","setNewMovie","handleInputChange","event","name","value","target","handleAddMovie","alert","isDuplicate","some","move","String","movie","handleDeleteMovie","updatedMovies","fileter","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onDeleteMovie","onInput","_c","$RefreshReg$"],"sources":["C:/react-workspace/react-tst/src/App.js"],"sourcesContent":["import './App.css';\nimport {BrowserRouter as Router, Link, Routes, Route} from 'react-router-dom';\nimport {useState} from 'react';\nimport Home from './Home';\nimport CreateMovie from './CreateMovie';\n\nfunction App() {\n  // 영화 게시판의 기본데이터 + ,setter 함수\n  const [movies, setMovies] = useState([\n    { id : 1, title : '오펜하이머', genre : '서사', release_date : '2023-08-17'},\n    { id : 2, title : '콘크리트유토피아', genre : '스릴러', release_date : '2023-08-10'},\n    { id : 3, title : '엘리먼트', genre : '판타지', release_date : '2023-07-15'},\n  ]);\n  // 새로운 영화 정보를 저장할 객체 -> CreateMovie 컴포넌트에 넘겨줄 예정\n  const [newMovie, setNewMovie] = useState({\n    id : '',\n    title : '',\n    genre : '',\n    release_date : ''\n  });\n\n  // CreateMovie 컴포넌트의 각 인풋태그에 추가할 이벤트 핸들러\n  // input 태그의 값이 바뀔때마다 (change) newMovie객체에 각 프로퍼티에 변경된 값들로 초기화 시킬 예정\n  // ex) 영화의 제목(title)값 수정을 한다면 newMovie의 title프로퍼티에 값을 변경시켜주는 기능 (부가적인 기능이다)\n  const handleInputChange = (event) =>{\n    const {name, value} = event.target;\n    setNewMovie({...newMovie, [name] : value});\n  }\n\n  // 영화 등록 메서드 -> 요효성 검사를 통과하면 setMovie함수를 호출하여 movies 상태값을 변경해줌\n  const handleAddMovie = ()=>{\n    // newMovie의 각 프로퍼티 중 빈 값이 있는지 검사 \n    // 자바스크립트에서 빈 문자열은 ( '' == false) 이렇게 읽힌다\n    if(!newMovie.id || !newMovie.title || !newMovie.genre || !newMovie.release_date){\n      alert(\"모근 값을 바르게 입력해주세요.\");\n      return;\n    }\n    // movies 객체 배열 안에 현재 추가하고자 하는 id값과 동일한 객체가 있는지 확인한다.\n    // isDuplicate 중복을 확인해주는 함수\n    const isDuplicate = movies.some( (move)=> String(movie.id) === newMovie.id  );\n\n    if(isDuplicate){\n      alert(\"이미 존재하는 ID입니다. 다시 입력해주세요.\");\n      setNewMovie({...newMovie , ['id'] : '' }); // id값만 비워준다. (빈문자열로 바꿔줌)\n      return;\n    }\n    setMovies([...movies, newMovie]);\n    setNewMovie({ id : '', title : '', genre: '', release_date : ''});\n  }\n\n  // 영화 삭제 메서드 -> 투두리스트와 동일\n  const handleDeleteMovie = (id) => {\n    const updatedMovies = movies.fileter( (movie) => movie.id !== id );\n    setMovies(updatedMovies);\n  }\n  return (\n   <Router>\n    <div className='container'>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">List</Link>\n          </li>\n          <li>\n            <Link to=\"/create\">Add New Movie</Link>\n          </li>\n        </ul>\n      </nav>\n      <Routes>\n        <Route path=\"/\" element={<Home movies={movies} onDeleteMovie={handleDeleteMovie}/>}/>\n        <Route path=\"/create\" element={<CreateMovie newMovie={newMovie} onInput />}/>\n      </Routes>\n    </div>\n   </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}