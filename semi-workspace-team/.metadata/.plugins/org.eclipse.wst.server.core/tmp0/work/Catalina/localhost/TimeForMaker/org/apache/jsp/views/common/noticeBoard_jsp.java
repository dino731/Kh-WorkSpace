/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-20 05:22:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import main.java.notice.model.vo.Notice;
import main.java.common.model.vo.PageInfo;
import main.java.member.model.vo.Member;
import main.java.member.model.vo.Member;

public final class noticeBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/user-header1.jsp", Long.valueOf(1689818488790L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("main.java.notice.model.vo.Notice");
    _jspx_imports_classes.add("main.java.common.model.vo.PageInfo");
    _jspx_imports_classes.add("main.java.member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

	//String contextPath = request.getContextPath();

	// loginUser 세션에서 가져와야 함
	// loginUser에서 관리자인지 회원인지 구분 필요
	//Member loginUser = (Member)request.getSession().getAttribute("loginUser");
	//System.out.println(loginUser.getManagerType()); --M
	
	 //imList, list : 중요공지리스트, 일반공지리스트 -request로부터 받아야함
	ArrayList<Notice> imList = (ArrayList<Notice>)request.getAttribute("imList");
	ArrayList<Notice> list = (ArrayList<Notice>)request.getAttribute("list");
	
	// 페이지 정보
	PageInfo pi = (PageInfo) request.getAttribute("pi");
	int currentPage = pi.getCurrentPage();
	int startPage   = pi.getStartPage();
	int endPage     = pi.getEndPage();
	int maxPage     = pi.getMaxPage(); 
	int pageLimit = pi.getPageLimit();
	
	String category = request.getParameter("category")==null? "전체" : request.getParameter("category");
	String keyword = request.getParameter("keyword");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<title>Notice Board</title>\n");
      out.write("\n");
      out.write("<!-- load css -->\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/templatemo.css\" type=\"text/css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/customer-center.css\" type=\"text/css\">\n");
      out.write("\n");
      out.write("<!-- load fonts style -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;700;900&display=swap\" type=\"text/css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/fontawesome.min.css\" type=\"text/css\">\n");
      out.write("\n");
      out.write("<!-- load script -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\"></script>\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<!-- 헤더 페이지 추가 필요 -->\n");
      out.write("	");
      out.write('\r');
      out.write('\n');

	String contextPath = request.getContextPath();

	Member loginUser = (Member) session.getAttribute("loginUser");
	// 로그인전이라면 loginUser에는 null값이 담겨있을 것이고
	// 로그인성공 후라면, loginUser에는 로그인한 회원의 정보가 담긴 Member객체가 들어가 있을것.
    //로그인 한 사용자들이라면 userId에 값 담김
	if(loginUser!=null){
	   	String userId=loginUser.getUserId();
	}
   
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>header+footer</title>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/TimeForMaker/assets/img/TFM_icon.png\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/bootstrap.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/templatemo.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/user-header.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/admin-header.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Load fonts style after rendering the layout styles -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;700;900&display=swap\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/TimeForMaker/assets/css/fontawesome.min.css\">\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("		const msg = \"");
      out.print( (String)session.getAttribute("alertMsg") );
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		if(msg != \"null\"){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			// 알림창을 띄워준 후 session에 담긴 해당 메세지는 지워줘야한다.\r\n");
      out.write("			// 안그럼, menubar.jsp가 로딩될때마다 항상 메세지가 뜰것..\r\n");
      out.write("			");
 session.removeAttribute("alertMsg"); 
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("   <!-- Header -->\r\n");
      out.write("   <nav class=\"navbar navbar-expand-lg navbar-light shadow main_nav_all admin_header\">\r\n");
      out.write("    <div class=\"container d-flex justify-content-between align-items-center\">\r\n");
      out.write("																			<!-- 여기에 메인페이지로 가는 길 -->\r\n");
      out.write("        <a class=\"navbar-brand text-success logo h1 align-self-center\" href=\"#\">\r\n");
      out.write("            <img src=\"/TimeForMaker/assets/img/메인로고.png\" class=\"main_logo\">\r\n");
      out.write("        </a>\r\n");
      out.write("\r\n");
      out.write("        <button class=\"navbar-toggler border-0\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#templatemo_main_nav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("            <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("        </button>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"align-self-center collapse navbar-collapse flex-fill  d-lg-flex justify-content-lg-between\" id=\"templatemo_main_nav\">\r\n");
      out.write("            <div class=\"flex-fill\">                \r\n");
      out.write("                 <ul class=\"nav justify-content-end\">\r\n");
      out.write("                 \r\n");
      out.write("                 	");
if(loginUser == null){//로그인 안했을때 실행부분
      out.write("\r\n");
      out.write("	                	<li class=\"nav-item\">\r\n");
      out.write("	                        <a class=\"nav-link\" href=\"");
      out.print( contextPath );
      out.write("/views/member/LoginMain.jsp\">로그인</a>\r\n");
      out.write("	                    </li>\r\n");
      out.write("	                    <li class=\"nav-item\">\r\n");
      out.write("	                        <a class=\"nav-link\" href=\"");
      out.print( contextPath );
      out.write("/views/member/SignUpCondition.jsp\">회원가입</a>\r\n");
      out.write("	                    </li>\r\n");
      out.write("	                     <li class=\"nav-item\">\r\n");
      out.write("	                        <a class=\"nav-link\" onclick=\"loginCheck();\" href=\"");
      out.print( contextPath );
      out.write("/views/mypage/MyPageEditInfo.jsp\" >고객센터</a>\r\n");
      out.write("	                    </li>\r\n");
      out.write("	                    \r\n");
      out.write("                    ");
}else{ //로그인했을때
      out.write("\r\n");
      out.write("	                    <li class=\"nav-item\">\r\n");
      out.write("	                        <a class=\"nav-link\" href=\"");
      out.print(contextPath );
      out.write("/Logout.me\">로그아웃</a>\r\n");
      out.write("	                    </li>\r\n");
      out.write("	                     <li class=\"nav-item\">\r\n");
      out.write("	                        <a class=\"nav-link\" href=\"");
      out.print( contextPath );
      out.write("/views/mypage/MyPageEditInfo.jsp\">고객센터</a>\r\n");
      out.write("	                    </li>\r\n");
      out.write("       				");
} 
      out.write("\r\n");
      out.write("                 </ul>                   \r\n");
      out.write("            </div>\r\n");
      out.write("       		\r\n");
      out.write("             <div class=\"navbar align-self-center d-flex login_check\">\r\n");
      out.write("             	<a class=\"nav-icon d-none d-lg-inline login_check\" href=\"#\">\r\n");
      out.write("			           <i class=\"fa fa-fw fa-search text-dark mr-2\"></i>\r\n");
      out.write("			      </a>\r\n");
      out.write("			      <a class=\"nav-icon position-relative text-decoration-none login_check\" href=\"");
      out.print( contextPath );
      out.write("/views/mypage/MyPageMain.jsp\" onclick=\"handleUserLink();\">\r\n");
      out.write("			           <i class=\"fa fa-fw fa-user text-dark mr-3\"></i>\r\n");
      out.write("	              </a>          \r\n");
      out.write("		     </div>\r\n");
      out.write("		      \r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  		 	");
if(loginUser != null){//로그인 했을때 실행부분
      out.write("\r\n");
      out.write("				    ");
String managerType =loginUser.getManagerType(); 
      out.write("\r\n");
      out.write("	    			");
if(managerType.equals("M")){ 
      out.write("      			\r\n");
      out.write("				    	<div class=\" main_adminbar \">\r\n");
      out.write("				            <div class=\"main_admin_menu\">\r\n");
      out.write("				                <li class=\"main_admin_li\">\r\n");
      out.write("				                    <a class=\"main_admin_link\" href=\"");
      out.print( contextPath );
      out.write("/product.pd\">상품관리</a>\r\n");
      out.write("				                </li>\r\n");
      out.write("				                <li class=\"main_admin_li\">\r\n");
      out.write("				                    <a class=\"main_admin_link\" href=\"");
      out.print( contextPath );
      out.write("/reserve.rs\">예약관리</a>\r\n");
      out.write("				                </li>\r\n");
      out.write("				                <li class=\"main_admin_li\">\r\n");
      out.write("				                    <a class=\"main_admin_link\" href=\"");
      out.print(contextPath );
      out.write("/list.me\">회원관리</a>\r\n");
      out.write("				                </li>\r\n");
      out.write("				                <li class=\"main_admin_li\">\r\n");
      out.write("				                    <a class=\"main_admin_link\" href=\"");
      out.print( contextPath );
      out.write("/notice.nt\">고객센터관리</a>\r\n");
      out.write("				                </li>\r\n");
      out.write("				            </div>\r\n");
      out.write("				        </div>\r\n");
      out.write("				  ");
} 
      out.write("\r\n");
      out.write("			");
} 
      out.write("  \r\n");
      out.write("</nav>\r\n");
      out.write("	\r\n");
      out.write("<!-- Close Header -->\r\n");
      out.write("\r\n");
      out.write("       <script>\r\n");
      out.write("		   // 로그인 상태에 따라 클릭 가능한 링크와 알림 메시지를 처리하는 함수\r\n");
      out.write("		   function handleUserLink() {\r\n");
      out.write("		      ");
 if (loginUser != null) { 
      out.write("\r\n");
      out.write("		         // loginUser가 null이 아닌 경우, 링크 클릭 가능\r\n");
      out.write("		         const userLinks = document.getElementsByClassName(\"login_check\");\r\n");
      out.write("		         for (const i = 0; i < userLinks.length; i++) {\r\n");
      out.write("		            userLinks[i].href = \"#\";\r\n");
      out.write("		         }\r\n");
      out.write("		     ");
 } else { 
      out.write("\r\n");
      out.write("		         // loginUser가 null인 경우, 알림 메시지 표시\r\n");
      out.write("		         alert(\"로그인 후 사용 가능합니다.\");\r\n");
      out.write("		         \r\n");
      out.write("		     ");
 } 
      out.write("\r\n");
      out.write("		   }\r\n");
      out.write("		   \r\n");
      out.write("		   function loginCheck() {\r\n");
      out.write("		        alert(\"로그인 후 이용 가능합니다!\");\r\n");
      out.write("		    }\r\n");
      out.write("	</script>\r\n");
      out.write("       \r\n");
      out.write("    <!-- Start Script -->\r\n");
      out.write("    <script src=\"/TimeForMaker/assets/js/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("    <script src=\"/TimeForMaker/assets/js/jquery-migrate-1.2.1.min.js\"></script>\r\n");
      out.write("    <script src=\"/TimeForMaker/assets/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"/TimeForMaker/assets/js/templatemo.js\"></script>\r\n");
      out.write("    <!-- End Script -->\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\n");
      out.write("	<!-- Close 헤더 파트 -->\n");
      out.write("\n");
      out.write("	<!-- Start 공지게시판 -->\n");
      out.write("	<!-- /noticeBoard 요청시 공지사항게시판으로 & href 수정 필요 -->\n");
      out.write("    <div class=\"notice-side-container\" style=\"position: relative;\">\n");
      out.write("\n");
      out.write("        <!-- Start Side-Menu -->\n");
      out.write("        <div class=\"side-menu\">\n");
      out.write("            <ul class=\"list-group list-group-flush\">\n");
      out.write("                <li class=\"list-group-item list-group-title\"><span>고객센터</span></li>\n");
      out.write("                ");
 
                	// session.removeAttribute("loginUser");
                
                	String[] noticeHref = {"공지사항", "noticeBoard"};
                	String[] receptHref = new String[2];
                	
 /*                	if(loginUser!=null && loginUser.getManagerType().equals("M")){
                		receptHref[0] = "회원 문의";
                		receptHref[1] = contextPath+"/manageReception";
                	}else{
                		receptHref[0] = "1:1 문의";
                		receptHref[1] = contextPath+"/myReception";
                	}
  */               
      out.write("\n");
      out.write("                <li class=\"list-group-item list-group-sub side-menu-selected\"><a href=\"");
      out.print(contextPath );
      out.write('/');
      out.print(noticeHref[1] );
      out.write('"');
      out.write('>');
      out.print(noticeHref[0] );
      out.write("</a></li>\n");
      out.write("                <li class=\"list-group-item list-group-sub\"><a href=\"");
      out.print(receptHref[1] );
      out.write('"');
      out.write('>');
      out.print(receptHref[0] );
      out.write("</a></li>\n");
      out.write("              </ul>\n");
      out.write("        </div>\n");
      out.write("        <!-- Close Side-Menu -->\n");
      out.write("    \n");
      out.write("        <!-- Start Notice Board Container -->\n");
      out.write("        <div class=\"container notice-board-area\" id=\"notice-board-area\">\n");
      out.write("            <!-- Start Notice Page Title -->\n");
      out.write("            <h3 align=\"center\" class=\"customer-center-title\">");
      out.print(noticeHref[0] );
      out.write("</h3>\n");
      out.write("            <!-- Close Notice Page Title -->\n");
      out.write("			\n");
      out.write(" 			");
 if(loginUser!=null && loginUser.getManagerType().equals("M")){ 
      out.write("\n");
      out.write("	            <!-- 관리자용 버튼 - 임시저장목록 -->\n");
      out.write("	            <div class=\"d-grid gap-2 d-md-flex justify-content-md-end notice-save-board-btn notice-manager-btn\">\n");
      out.write("	            \n");
      out.write("	            	<!-- saveNotice -get : 임시저장 목록 (요청값 없을 때)\n");
      out.write("	            		 saveNotice -post : 작성중인 공지글 저장\n");
      out.write("	            	 -->\n");
      out.write("	                <button class=\"btn\" type=\"button\" onclick=\"location.href='");
      out.print(contextPath);
      out.write("/saveNoticeBoard'\">임시저장 목록</button>\n");
      out.write("	            </div>\n");
      out.write("			");
 } 
      out.write("\n");
      out.write("			\n");
      out.write(" \n");
      out.write("            <table class=\"table\" style=\"table-layout:fixed\">\n");
      out.write("                <thead>\n");
      out.write("                    <tr>\n");
      out.write("                        <th scope=\"col\" width=\"10%;\">No</th>\n");
      out.write("                        <th scope=\"col\" colspan=\"2\" width=\"60%;\">제목</th>\n");
      out.write("                        <th scope=\"col\" width=\"10%\">일자</th>\n");
      out.write("                    </tr>\n");
      out.write("                </thead>\n");
      out.write("                <tbody>\n");
      out.write("                    <!-- db에 중요 공지라고 따로 지정한 컬럼을 통해 우선 중요공지 먼저 출력\n");
      out.write("                        -> 일반 공지 출력 \n");
      out.write("                        \n");
      out.write("                        * 공지 리스트에 필요한 것 : rownum (공지번호글X), 공지 제목, 등록일\n");
      out.write("                    -->\n");
      out.write("                    ");
 int i=0; 
      out.write("\n");
      out.write("                     ");
 if(imList != null){
                   		for(Notice n : imList){ 
      out.write("\n");
      out.write("                   			<tr class=\"important-notice\">\n");
      out.write("		                        <th scope=\"row\">");
      out.print(n.getRowNum() );
      out.write("</th>\n");
      out.write("		                        <td colspan=\"2\"><a href=\"");
      out.print(contextPath );
      out.write("/notice?no=");
      out.print(n.getRowNum() );
      out.write("&impt=");
      out.print(n.getImpt());
      out.write('"');
      out.write('>');
      out.print(n.getTitle() );
      out.write("</a></td>\n");
      out.write("		                        <td>");
      out.print(n.getDate() );
      out.write("</td>\n");
      out.write("                   			</tr>\n");
      out.write("                   		");
 i++;
                   			} 
      out.write("\n");
      out.write("                   	");
	} 
      out.write("\n");
      out.write("                   	");
 if(list!=null){ 
      out.write("\n");
      out.write("	                   	");
 for(Notice n : list){ 
      out.write("\n");
      out.write("	                   		<tr>\n");
      out.write("		                        <th scope=\"row\">");
      out.print(n.getRowNum() );
      out.write("</th>\n");
      out.write("		                        <td colspan=\"2\"><a href=\"");
      out.print(contextPath );
      out.write("/notice?no=");
      out.print(n.getRowNum() );
      out.write("&impt=");
      out.print(n.getImpt());
      out.write('"');
      out.write('>');
      out.print(n.getTitle() );
      out.write("</a></td>\n");
      out.write("		                        <td>");
      out.print(n.getDate() );
      out.write("</td>\n");
      out.write("		                    </tr>\n");
      out.write("		                    ");
 i++; 
      out.write("\n");
      out.write("	                 	");
 } 
      out.write("\n");
      out.write("                   	");
 } 
      out.write("\n");
      out.write("                   	\n");
      out.write("                   	");
 for(; i<10; i++) { 
      out.write("\n");
      out.write("                   		<tr>\n");
      out.write("	                        <th scope=\"row\"></th>\n");
      out.write("	                        <td colspan=\"2\"><a href=\"\"></a></td>\n");
      out.write("	                        <td></td>\n");
      out.write("	                    </tr>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                </tbody>\n");
      out.write("                <tfoot>\n");
      out.write("                </tfoot>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("            <nav class=\"navbar navbar-expand-lg\" id=\"notice-search-bar\" style=\"background-color: transparent;\">\n");
      out.write("              <!-- script단에서 요청 (-> /noticeSearch 비동기 처리 필요) 우선 NoticeBoard에서 모든걸 처리 -->\n");
      out.write("              <div class=\"container-fluid\">\n");
      out.write("                  <div class=\"collapse navbar-collapse\" id=\"navbarNavDarkDropdown\">\n");
      out.write("                      <ul class=\"navbar-nav\">\n");
      out.write("                          <li class=\"nav-item dropup dropdown-center\">\n");
      out.write("                              <button class=\"nav-link dropdown-toggle\" type=\"button\" name=\"notice-category\" value=\"\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" style=\"border:0.8px solid black; background-color: transparent;\">\n");
      out.write("                                  <span>");
      out.print(category );
      out.write("</span>\n");
      out.write("                              </button>\n");
      out.write("                              <ul class=\"dropdown-menu dropdown-menu-middle\" id=\"notice-search-category-menu\" style=\"text-align: center;\">\n");
      out.write("                              	  <li class=\"dropdown-item\">전체</li>\n");
      out.write("                                  <li class=\"dropdown-item\">제목</li>\n");
      out.write("                                  <li class=\"dropdown-item\">내용</li>\n");
      out.write("                                  <li class=\"dropdown-item\">제목 및 내용</li>\n");
      out.write("                              </ul>\n");
      out.write("                          </li>\n");
      out.write("                      </ul>\n");
      out.write("                  </div>\n");
      out.write("                  <input type=\"text\" maxlength=\"5\" placeholder=\"검색어입력\">\n");
      out.write("                  <script>\n");
      out.write("                  	");
 if(keyword!=null){ 
      out.write("\n");
      out.write("                  		$(\"#notice-search-bar input\").val(\"");
      out.print(keyword);
      out.write("\");\n");
      out.write("                  	");
 } 
      out.write("\n");
      out.write("                  </script>\n");
      out.write("\n");
      out.write("				");
 if(loginUser!=null && loginUser.getManagerType().equals("M")){ 
      out.write("\n");
      out.write("                   <!-- 관리자용 버튼 - 공지작성 (공지작성폼 페이지 연결 필요) -->\n");
      out.write("                   <div class=\"d-grid gap-2 d-md-flex justify-content-md-end notice-write-btn notice-manager-btn\">\n");
      out.write("                       <button type=\"button\" class=\"btn\" onclick=\"location.href='");
      out.print(contextPath);
      out.write("/uploadNotice'\">작성하기</button>\n");
      out.write("                   </div>\n");
      out.write("                 ");
 } 
      out.write(" \n");
      out.write("               </div>\n");
      out.write("            </nav>\n");
      out.write("\n");
      out.write("            <nav id=\"notice-recept-board-navi\" aria-label=\"Page navigation\">\n");
      out.write("                <ul class=\"pagination justify-content-center\">\n");
      out.write("                	");
 if(maxPage != pageLimit) { 
      out.write("\n");
      out.write("	                  <li class=\"page-item notice-page-pre\">\n");
      out.write("	                  	");
 if(startPage != 1){ 
      out.write("\n");
      out.write("	                  		<a class=\"page-link\" href=\"");
      out.print(contextPath);
      out.write("/noticeBoard?page=");
      out.print(startPage-pageLimit);
      out.write("$category=");
      out.print(category );
      out.write("&keyword=");
      out.print(keyword );
      out.write("\" aria-label=\"Previous\">\n");
      out.write("		                    	<span aria-hidden=\"true\">&laquo;</span>\n");
      out.write("		                    </a>\n");
      out.write("	                    ");
 }else{ 
      out.write("\n");
      out.write("	                    	<a class=\"page-link\" aria-label=\"Previous\" onclick=\"return false;\">\n");
      out.write("		                    	<span aria-hidden=\"true\">&laquo;</span>\n");
      out.write("		                    </a>\n");
      out.write("	                    ");
 } 
      out.write("\n");
      out.write("	                      \n");
      out.write("	                  </li>\n");
      out.write("	              ");
 } 
      out.write(" \n");
      out.write("	              \n");
      out.write(" 	              ");
 for(int p = startPage; p<= endPage; p++){ 
      out.write("\n");
      out.write("		              	");
 if(p==currentPage) { 
      out.write("\n");
      out.write("			                  <li class=\"page-item notice-recept-page-clicked\"><a class=\"page-link\" href=\"");
      out.print(contextPath);
      out.write("/noticeBoard?page=");
      out.print(p );
      out.write("$category=");
      out.print(category );
      out.write("&keyword=");
      out.print(keyword );
      out.write("\" onclick=\"return false;\">");
      out.print(p );
      out.write("</a></li>\n");
      out.write("		              	");
 } else { 
      out.write("\n");
      out.write("			                  <li class=\"page-item\"><a class=\"page-link\" href=\"");
      out.print(contextPath);
      out.write("/noticeBoard?page=");
      out.print(p );
      out.write("$category=");
      out.print(category );
      out.write("&keyword=");
      out.print(keyword );
      out.write('"');
      out.write('>');
      out.print(p );
      out.write("</a></li>	              	\n");
      out.write("		              	");
 } 
      out.write("\n");
      out.write("	              ");
 } 
      out.write("\n");
      out.write("                  \n");
      out.write("                  ");
 if(maxPage != pageLimit) { 
      out.write("\n");
      out.write("	                  <li class=\"page-item\">\n");
      out.write("	                  ");
 if(endPage == maxPage){ 
      out.write("\n");
      out.write("	                    <a class=\"page-link notice-page-next\" aria-label=\"Next\" onclick=\"return false;\">\n");
      out.write("	                      <span aria-hidden=\"true\">&raquo;</span>\n");
      out.write("	                    </a>\n");
      out.write("	                  ");
 } else{ 
      out.write("\n");
      out.write("	                  	<a class=\"page-link notice-page-next\" href=\"");
      out.print(contextPath);
      out.write("/noticeBoard?page=");
      out.print(startPage+pageLimit);
      out.write("$category=");
      out.print(category );
      out.write("&keyword=");
      out.print(keyword );
      out.write("\" aria-label=\"Next\">\n");
      out.write("	                      <span aria-hidden=\"true\">&raquo;</span>\n");
      out.write("	                    </a>\n");
      out.write("	                  ");
 } 
      out.write("\n");
      out.write("	                  </li>\n");
      out.write("                  ");
 } 
      out.write(" \n");
      out.write("                </ul>\n");
      out.write("            </nav>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Close Notice Board Container -->\n");
      out.write("\n");
      out.write("		<!-- Start Alert Box -->\n");
      out.write("        ");
 if(session.getAttribute("msg")!=null){ 
      out.write("\n");
      out.write("	        <div class=\"recept-alert-box\">\n");
      out.write("	            <button type=\"button\" class=\"btn btn-outline-dark recept-alert-box-close\">X</button>\n");
      out.write("	            <span>");
      out.print(session.getAttribute("msg") );
      out.write("</span>\n");
      out.write("	        </div>\n");
      out.write("	        ");
 session.removeAttribute("msg"); 
      out.write("\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        <!-- Close Alert Box -->\n");
      out.write("    </div>\n");
      out.write("	<!-- Close 공지게시판 -->\n");
      out.write("	\n");
      out.write("	 <!-- Start Footer -->\n");
      out.write("    <footer class=\"main_footer\" id=\"tempaltemo_footer\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("\n");
      out.write("                <div class=\"col-md-4 pt-5\">\n");
      out.write("                    <img src=\"");
      out.print(contextPath );
      out.write("/assets/img/메인로고.png\" class=\"main_logo\">\n");
      out.write("                    <ul class=\"list-unstyled text-light footer-link-list\">\n");
      out.write("                        <li>\n");
      out.write("                            <i class=\"fas fa-map-marker-alt fa-fw\"></i>\n");
      out.write("                            서울특별시 강남구 테헤란로14길6\n");
      out.write("                        </li>\n");
      out.write("                        <li>\n");
      out.write("                            <i class=\"fa fa-phone fa-fw\"></i>\n");
      out.write("                            <a class=\"text-decoration-none\" href=\"tel:010-020-0340\">010-020-0340</a>\n");
      out.write("                        </li>\n");
      out.write("                        <li>\n");
      out.write("                            <i class=\"fa fa-envelope fa-fw\"></i>\n");
      out.write("                            <a class=\"text-decoration-none\" href=\"mailto:info@company.com\">info@company.com</a>\n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"w-100 py-3\">\n");
      out.write("            <div class=\"container\">\n");
      out.write("                <div class=\"row pt-2\">\n");
      out.write("                    <div class=\"col-12\">\n");
      out.write("                        <p class=\"text-left\">\n");
      out.write("                            &copy; 2023 떡잎방범대 박수진 박지현 이아인 임재린 황슬기\n");
      out.write("                        </p>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </footer>\n");
      out.write("    <!-- End Footer -->\n");
      out.write("	\n");
      out.write("	<!-- Start Script -->\n");
      out.write("	<script src=\"");
      out.print(contextPath );
      out.write("/assets/js/jquery-1.11.0.min.js\"></script>\n");
      out.write("	<script src=\"");
      out.print(contextPath );
      out.write("/assets/js/jquery-migrate-1.2.1.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(contextPath );
      out.write("/assets/js/templatemo.js\"></script>\n");
      out.write("    <script src=\"");
      out.print(contextPath );
      out.write("/assets/js/customer-center.js\"></script>\n");
      out.write("    <script>\n");
      out.write("\n");
      out.write("        /* 게시판에 빈 라인 hover삭제 */\n");
      out.write("        $(\"#notice-board-area tbody tr\").hover(function(){\n");
      out.write("            if($(this).children(\"th\").text()!=\"\"){\n");
      out.write("                $(this).css(\"background-color\",\"#F7F0D4\");\n");
      out.write("            }\n");
      out.write("        }, function(){\n");
      out.write("            if($(this).hasClass(\"important-notice\")){\n");
      out.write("                $(this).css(\"background-color\",\"lightgray\");\n");
      out.write("            }else{\n");
      out.write("                $(this).css(\"background-color\",\"none\");\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /* 게시판 빈칸 속성지정 */\n");
      out.write("        $(\"#notice-board-area tbody tr>th\").each(function(index){\n");
      out.write("            if($(this).text()==\"\"){\n");
      out.write("                $(\"#notice-board-area tbody tr\").eq(index).css(\"border\",\"white\");\n");
      out.write("                if(index==9){\n");
      out.write("                    $(\"#notice-board-area tbody tr\").eq(index).css(\"border-bottom\",\"black\");\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        /* 공지사항 게시판 페이징 버튼 효과 */\n");
      out.write("        $(\".page-item\").click(function(){\n");
      out.write("        	if(!($(this).hasClass(\"notice-page-pre\") || $(this).hasClass(\"notice-page-next\"))){\n");
      out.write("	            $(this).siblings().removeClass(\"notice-recept-page-clicked\");\n");
      out.write("	            $(this).addClass(\"notice-recept-page-clicked\"); \n");
      out.write("        	}\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /* 공지게시판 카테고리 선택 */\n");
      out.write("        $(\"#navbarNavDarkDropdown button span\").css(\"display\",\"inline-block\");\n");
      out.write("        $(\"#navbarNavDarkDropdown button span\").width($(\"#notice-search-category-menu>li\").width());\n");
      out.write("        $(\"#notice-search-category-menu>li\").click(function(){\n");
      out.write("            let value=$(this).text();\n");
      out.write("            $(\"#navbarNavDarkDropdown button span\").text(value);\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /* 공지게시판 검색 -> get으로 요청 */\n");
      out.write("        /* 선택 대신 기본값을 전체로 세팅 or 컨트롤에서 선택 값을 전체로 인식하게 */\n");
      out.write("        $(\"#notice-search-bar input\").on(\"keyup\", function(key){\n");
      out.write("            if(key.keyCode==13){\n");
      out.write("                let category = $(\"#navbarNavDarkDropdown button span\").text();\n");
      out.write("                let keyword = $(this).val();\n");
      out.write("                let url=\"");
      out.print(contextPath);
      out.write("/noticeBoard?category=\"+category+\"&keyword=\"+keyword;\n");
      out.write("                location.href=url;\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("        /* 공지게시판 검색바 위치 조정 */\n");
      out.write("        let noticeSearchPos = $(\"#notice-search-bar button\").offset().left;\n");
      out.write("        $(\"#notice-search-bar input\").offset({left:noticeSearchPos+(noticeSearchPos*0.36)});\n");
      out.write("\n");
      out.write("        /* 알림창 닫기 이벤트 */\n");
      out.write("        $(\".recept-alert-box-close\").click(function(){\n");
      out.write("            $(\".recept-alert-box\").css(\"display\",\"none\");\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("    <!-- End Script -->\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
