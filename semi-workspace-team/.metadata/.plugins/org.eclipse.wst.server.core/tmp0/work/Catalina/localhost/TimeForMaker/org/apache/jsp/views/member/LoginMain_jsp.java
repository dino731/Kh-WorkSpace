/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-20 06:58:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import main.java.member.model.vo.Member;

public final class LoginMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("main.java.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	String contextPath = request.getContextPath();

	Member loginUser = (Member) session.getAttribute("loginUser");
	// 로그인전이라면 loginUser에는 null값이 담겨있을 것이고
	// 로그인성공 후라면, loginUser에는 로그인한 회원의 정보가 담긴 Member객체가 들어가 있을것.

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<link rel=\"apple-touch-icon\" href=\"");
      out.print(contextPath );
      out.write("/assets/img/apple-icon.png\">\r\n");
      out.write("<link rel=\"shortcut icon\" type=\"image/x-icon\"\r\n");
      out.write("	href=\"");
      out.print(contextPath );
      out.write("/assets/img/favicon.ico\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/assets/css/user-header.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/assets/css/mypage_login.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/assets/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/assets/css/templatemo.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- Load fonts style after rendering the layout styles -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@100;200;300;400;500;700;900&display=swap\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(contextPath );
      out.write("/assets/css/fontawesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Header -->\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light shadow main_nav_all\">\r\n");
      out.write("		<div\r\n");
      out.write("			class=\"container d-flex justify-content-between align-items-center\">\r\n");
      out.write("\r\n");
      out.write("			<a class=\"navbar-brand text-success logo h1 align-self-center\"\r\n");
      out.write("				href=\"main.html\"> <img src=\"");
      out.print(contextPath );
      out.write("/assets/img/메인로고.png\"\r\n");
      out.write("				class=\"main_logo\">\r\n");
      out.write("			</a>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"navbar-toggler border-0\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"collapse\" data-bs-target=\"#templatemo_main_nav\"\r\n");
      out.write("				aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("				aria-label=\"Toggle navigation\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("\r\n");
      out.write("			<div\r\n");
      out.write("				class=\"align-self-center collapse navbar-collapse flex-fill  d-lg-flex justify-content-lg-between\"\r\n");
      out.write("				id=\"templatemo_main_nav\">\r\n");
      out.write("				<div class=\"flex-fill\">\r\n");
      out.write("					<ul class=\"nav justify-content-end\">\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("							href=\"");
      out.print(contextPath );
      out.write("/views/mypage/member/LoginMain.jsp\">로그인</a></li>\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\"\r\n");
      out.write("							href=\"");
      out.print(contextPath );
      out.write("/views/mypage/member/SignUpCondition.jsp\">회원가입</a></li>\r\n");
      out.write("						<li class=\"nav-item\"><a class=\"nav-link\" href=\"\">고객센터</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"navbar align-self-center d-flex\">\r\n");
      out.write("					<a class=\"nav-icon d-none d-lg-inline\" href=\"#\"\r\n");
      out.write("						data-bs-toggle=\"modal\" data-bs-target=\"#templatemo_search\"> <i\r\n");
      out.write("						class=\"fa fa-fw fa-search text-dark mr-2\"></i>\r\n");
      out.write("					</a> <a class=\"nav-icon position-relative text-decoration-none\"\r\n");
      out.write("						href=\"#\"> <i class=\"fa fa-fw fa-user text-dark mr-3\"></i>\r\n");
      out.write("					</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<!-- Close Header -->\r\n");
      out.write("	<!-- Modal 헤드에 검색 누르면 나오는 모달  -->\r\n");
      out.write("	<div class=\"modal fade bg-white\" id=\"templatemo_search\" tabindex=\"-1\"\r\n");
      out.write("		role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("		<div class=\"modal-dialog modal-lg\" role=\"document\">\r\n");
      out.write("			<div class=\"w-100 pt-1 mb-5 text-right\">\r\n");
      out.write("				<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"\r\n");
      out.write("					aria-label=\"Close\"></button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<form action=\"\" method=\"get\"\r\n");
      out.write("				class=\"modal-content modal-body border-0 p-0\">\r\n");
      out.write("				<div class=\"input-group mb-2\">\r\n");
      out.write("					<input type=\"text\" class=\"form-control\" id=\"inputModalSearch\"\r\n");
      out.write("						name=\"q\" placeholder=\"Search ...\">\r\n");
      out.write("					<button type=\"submit\"\r\n");
      out.write("						class=\"input-group-text bg-success text-light\">\r\n");
      out.write("						<i class=\"fa fa-fw fa-search text-white\"></i>\r\n");
      out.write("					</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- start body -->\r\n");
      out.write("	<div class=\"user-login-wrapper\">\r\n");
      out.write("		<div class=\"user-login-container\">\r\n");
      out.write("			<!-- 회원가입 상단 바 시작 -->\r\n");
      out.write("			<ul class=\"nav justify-content-center\">\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link active\"\r\n");
      out.write("					aria-current=\"page\" href=\"#\"> <span\r\n");
      out.write("						style=\"color: gray; font-size: 12px;\">________________________\r\n");
      out.write("							쉽고 간단한 로그인 및 회원 가입 ________________________</span></a></li>\r\n");
      out.write("				<br>\r\n");
      out.write("			</ul>\r\n");
      out.write("			<div\r\n");
      out.write("				style=\"color: black; font-weight: bold; text-align: center; margin-top: 50px;\">\r\n");
      out.write("				<h5 style=\"font-weight: 400;\">로그인 방법 선택</h5>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 회원가입 상단 바 끝 -->\r\n");
      out.write("\r\n");
      out.write("			<!-- 로그인 버튼 시작-->\r\n");
      out.write("			<div class=\"user-login-list\">\r\n");
      out.write("			<a href=\"#0\" id=\"kakaoLogout\" Style=\"text-decoration:none; color:white;\">로그아웃</a> <a href=\"#0\"\r\n");
      out.write("						id=\"secession\"  Style=\"text-decoration:none; color:white;\">탈퇴</a>\r\n");
      out.write("				<!-- 카카오톡 로그인 시작-->\r\n");
      out.write("				<div class=\"user-login-kakaoWapper\">\r\n");
      out.write("					<div onclick=\"kakaoLogin();\" class=\"user-login-kakaodiv\">\r\n");
      out.write("						<a class=\"user-login-astyle\" href=\"javascript:void(0);\"> <span\r\n");
      out.write("							class=\"user-login-kakaospan\">카카오톡으로 로그인</span>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- 카카오톡 로그인 끝-->\r\n");
      out.write("				\r\n");
      out.write("				<!-- 구글 로그인 시작-->\r\n");
      out.write("				<div class=\"user-login-googleWapper\">\r\n");
      out.write("					<div class=\"user-login-GgCustomLogin\">\r\n");
      out.write("						<a class=\"user-login-astyle\" href=\"javascript:void(0)\"> <span\r\n");
      out.write("							class=\"user-login-googlespan\">구글 이메일로 로그인</span>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- 구글 로그인 끝-->\r\n");
      out.write("\r\n");
      out.write("				<!-- 자사 로그인 시작 -->\r\n");
      out.write("				<div class=\"user-login-membership-wapper\">\r\n");
      out.write("					<div class=\"user-login-memberdiv\">\r\n");
      out.write("						<a class=\"user-login-astyle\" href=\"LoginTFM.jsp\"> <span\r\n");
      out.write("							class=\"user-login-memberspan\">다른 방법으로 로그인</span>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- 자사 로그인 끝 -->\r\n");
      out.write("\r\n");
      out.write("				<!-- 회원가입 유도 버튼 시작-->\r\n");
      out.write("				<div class=\"membershipGuideWapper\">\r\n");
      out.write("					<span style=\"font-size: 13px; color: darkgrey; font-weight: 600;\">아이디가 없으신가요? <a href=\"SignUpCondition.jsp\"\r\n");
      out.write("						style=\"color: rgb(99, 99, 255); text-decoration-line: none; font-weight: 600; font-size: 13px;\">회원가입</a>하기\r\n");
      out.write("					</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<!-- 회원가입 유도 버튼 끝-->\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 로그인 버튼 끝-->\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 카카오 스크립트 -->\r\n");
      out.write("<script src=\"https://t1.kakaocdn.net/kakao_js_sdk/2.3.0/kakao.min.js\"></script>\r\n");
      out.write("<script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  function saveToDos(token) { //item을 localStorage에 저장합니다.\r\n");
      out.write("    typeof Storage !== 'undefined' && sessionStorage.setItem('AccessKEY', JSON.stringify(token));\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  Kakao.init('0ad62496d34706bb99cabd0c743c559a');\r\n");
      out.write("\r\n");
      out.write("  function kakaoLogin() {\r\n");
      out.write("    Kakao.Auth.login({\r\n");
      out.write("      success: function(response) {\r\n");
      out.write("        saveToDos(response.access_token); // 로그인 성공하면 사용자 엑세스 토큰 sessionStorage에 저장\r\n");
      out.write("        Kakao.API.request({\r\n");
      out.write("          url: '/v2/user/me',\r\n");
      out.write("          success: function(response) {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("              type: \"post\",\r\n");
      out.write("              url: '");
      out.print(contextPath);
      out.write("/KIdCheck.me',\r\n");
      out.write("              data: { \"userId\": response.id },\r\n");
      out.write("              success: function(result) {\r\n");
      out.write("                console.log(result);\r\n");
      out.write("                if (result == \"0\") {\r\n");
      out.write("                  $.ajax({\r\n");
      out.write("                    type: \"post\",\r\n");
      out.write("                    url: '");
      out.print(contextPath);
      out.write("/Klogin.me',\r\n");
      out.write("                    data: { \"userId\": response.id, \"userPwd\": \"123\" },\r\n");
      out.write("                    dataType: \"json\",\r\n");
      out.write("                    success: function(loginUser) {\r\n");
      out.write("                      if (loginUser != null) {\r\n");
      out.write("                        // 로그인 성공 시 세션에 정보 저장\r\n");
      out.write("                        for (var key in loginUser) {\r\n");
      out.write("                          sessionStorage.setItem(key, loginUser[key]);\r\n");
      out.write("                        }\r\n");
      out.write("                        // 메인 페이지로 이동\r\n");
      out.write("                        window.location.href = '");
      out.print(contextPath);
      out.write("/views/common/main.jsp';\r\n");
      out.write("                      } else {\r\n");
      out.write("                        alert('로그인에 실패했습니다.');\r\n");
      out.write("                      }\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(request, status, error) {\r\n");
      out.write("                      alert(\"로그인에 실패했습니다. 서버 오류: \" + error);\r\n");
      out.write("                    }\r\n");
      out.write("                  });\r\n");
      out.write("                } else {\r\n");
      out.write("                  $.ajax({\r\n");
      out.write("                    type: \"post\",\r\n");
      out.write("                    url: '");
      out.print(contextPath);
      out.write("/insert.me',\r\n");
      out.write("                    data: {\r\n");
      out.write("                      \"userId\": response.id,\r\n");
      out.write("                      \"userName\": response.properties.nickname,\r\n");
      out.write("                      \"UserNick\": response.kakao_account.email,\r\n");
      out.write("                      \"userPhone\": \"01011112222\",\r\n");
      out.write("                      \"userPwd\": \"123\"\r\n");
      out.write("                    },\r\n");
      out.write("                    success: function() {\r\n");
      out.write("                      alert('회원가입이 완료되었습니다.');\r\n");
      out.write("                    },\r\n");
      out.write("                    error: function(request, status, error) {\r\n");
      out.write("                      alert(\"회원가입에 실패했습니다. 서버 오류: \" + error);\r\n");
      out.write("                    }\r\n");
      out.write("                  });\r\n");
      out.write("                }\r\n");
      out.write("              },\r\n");
      out.write("              error: function(request, status, error) {\r\n");
      out.write("                alert(\"ID 중복체크에 실패했습니다. 서버 오류: \" + error);\r\n");
      out.write("              }\r\n");
      out.write("            });\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      },\r\n");
      out.write("      fail: function(error) {\r\n");
      out.write("        alert(error);\r\n");
      out.write("      }\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("   function createHiddenLoginForm(kakaoId) {\r\n");
      out.write("    var frm = document.createElement('form');\r\n");
      out.write("    frm.setAttribute('method', 'post');\r\n");
      out.write("    frm.setAttribute('action', '");
      out.print(contextPath);
      out.write("/login.me');\r\n");
      out.write("\r\n");
      out.write("    var hiddenInputId = document.createElement('input');\r\n");
      out.write("    hiddenInputId.setAttribute('type', 'hidden');\r\n");
      out.write("    hiddenInputId.setAttribute('name', 'userid');\r\n");
      out.write("    hiddenInputId.setAttribute('value', response.id);\r\n");
      out.write("    frm.appendChild(hiddenInputId);\r\n");
      out.write("\r\n");
      out.write("    var hiddenInputPwd = document.createElement('input');\r\n");
      out.write("    hiddenInputPwd.setAttribute('type', 'hidden');\r\n");
      out.write("    hiddenInputPwd.setAttribute('name', 'userPwd');\r\n");
      out.write("    hiddenInputPwd.setAttribute('value', '123');\r\n");
      out.write("    frm.appendChild(hiddenInputPwd);\r\n");
      out.write("\r\n");
      out.write("    document.body.appendChild(frm);\r\n");
      out.write("    frm.submit();\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function kakaoLogout() {\r\n");
      out.write("    if (!Kakao.Auth.getAccessToken()) {\r\n");
      out.write("      console.log('Not logged in.');\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("    Kakao.Auth.logout(function(response) {\r\n");
      out.write("      alert(response + ' logout');\r\n");
      out.write("      window.location.href = '");
      out.print(contextPath);
      out.write("/views/common/main.jsp';\r\n");
      out.write("    });\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  function secession() {\r\n");
      out.write("    var accessToken = Kakao.Auth.getAccessToken();\r\n");
      out.write("    if (!accessToken) {\r\n");
      out.write("      alert('로그인 상태가 아닙니다.');\r\n");
      out.write("      return;\r\n");
      out.write("    }\r\n");
      out.write("    Kakao.API.request({\r\n");
      out.write("        url: '/v1/user/unlink',\r\n");
      out.write("      })\r\n");
      out.write("      .then(function(res) {\r\n");
      out.write("        alert('success: ' + JSON.stringify(res));\r\n");
      out.write("        deleteCookie();\r\n");
      out.write("        $.ajax({\r\n");
      out.write("          type: \"post\",\r\n");
      out.write("          url: '");
      out.print(contextPath);
      out.write("/TimeForMaker/delete.me',\r\n");
      out.write("          data: { \"userPwd\": \"123\" },\r\n");
      out.write("          dataType: \"json\",\r\n");
      out.write("          success: function(response) {\r\n");
      out.write("            alert('회원탈퇴되었습니다.');\r\n");
      out.write("            window.location.href = '");
      out.print(contextPath);
      out.write("/views/common/main.jsp';\r\n");
      out.write("          },\r\n");
      out.write("          error: function(request, status, error) {\r\n");
      out.write("            alert(\"회원탈퇴에 실패했습니다. 서버 오류: \" + error);\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      })\r\n");
      out.write("      .catch(function(err) {\r\n");
      out.write("        alert('fail: ' + JSON.stringify(err));\r\n");
      out.write("      });\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  const logout = document.querySelector('#kakaoLogout');\r\n");
      out.write("  const sion = document.querySelector('#secession');\r\n");
      out.write("\r\n");
      out.write("  logout.addEventListener('click', kakaoLogout);\r\n");
      out.write("  sion.addEventListener('click', secession);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- jsQuery 및 기능 구현 끝-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- close body -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!-- Start Footer -->\r\n");
      out.write("    <footer class=\"main_footer\" id=\"tempaltemo_footer\">\r\n");
      out.write("      <div class=\"container\">\r\n");
      out.write("          <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("              <div class=\"col-md-4 pt-5\">\r\n");
      out.write("                  <img src=\"");
      out.print(contextPath );
      out.write("/assets/img/메인로고.png\" class=\"main_logo\">\r\n");
      out.write("                  <ul class=\"list-unstyled text-light footer-link-list\">\r\n");
      out.write("                      <li>\r\n");
      out.write("                          <i class=\"fas fa-map-marker-alt fa-fw\"></i>\r\n");
      out.write("                          서울특별시 강남구 테헤란로14길6\r\n");
      out.write("                      </li>\r\n");
      out.write("                      <li>\r\n");
      out.write("                          <i class=\"fa fa-phone fa-fw\"></i>\r\n");
      out.write("                          <a class=\"text-decoration-none\" href=\"tel:010-020-0340\">010-020-0340</a>\r\n");
      out.write("                      </li>\r\n");
      out.write("                      <li>\r\n");
      out.write("                          <i class=\"fa fa-envelope fa-fw\"></i>\r\n");
      out.write("                          <a class=\"text-decoration-none\" href=\"mailto:info@company.com\">info@company.com</a>\r\n");
      out.write("                      </li>\r\n");
      out.write("                  </ul>\r\n");
      out.write("              </div>\r\n");
      out.write("\r\n");
      out.write("             \r\n");
      out.write("\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <div class=\"w-100 py-3\">\r\n");
      out.write("          <div class=\"container\">\r\n");
      out.write("              <div class=\"row pt-2\">\r\n");
      out.write("                  <div class=\"col-12\">\r\n");
      out.write("                      <p class=\"text-left\">\r\n");
      out.write("                          &copy; 2023 떡잎방범대 박수진 박지현 이아인 임재린 황슬기\r\n");
      out.write("                      </p>\r\n");
      out.write("                  </div>\r\n");
      out.write("              </div>\r\n");
      out.write("          </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("</footer>\r\n");
      out.write("  <!-- End Footer -->\r\n");
      out.write("\r\n");
      out.write("  <!-- Start Script -->\r\n");
      out.write("  <script src=\"");
      out.print(contextPath );
      out.write("/assets/js/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.print(contextPath );
      out.write("/assets/js/jquery-migrate-1.2.1.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.print(contextPath );
      out.write("/assets/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<script src=\"");
      out.print(contextPath );
      out.write("/assets/js/templatemo.js\"></script>\r\n");
      out.write("	<!-- End Script -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
