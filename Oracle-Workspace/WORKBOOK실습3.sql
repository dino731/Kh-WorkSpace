-- 1. 학생이름, 주소지 (출력 헤더 학생 이름 , 주소지) 정렬은 이름으로 오름차순
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME ASC; -- 588ROWS SELECTED

-- 2. 휴학중인 학생의 이름과 주민번호를 나이가 적은 순서로 화면에 출력
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'; -- 91 ROWS SELECTED

-- 3. 주소지가 강원도나 경이도인 학생들 중 1900년대 학번을 가진 학생들의 이름과 학번, 주소를
--      이름의 오름차순으로 화면에 출력 헤더 "학생이름","학번","거주지 주소"
SELECT STUDENT_NAME "학생이름",STUDENT_NO "학번", STUDENT_ADDRESS "거주지 주소", student_ssn
FROM TB_STUDENT
WHERE (SUBSTR(STUDENT_ADDRESS,1,3) = '경기도' 
        OR SUBSTR(STUDENT_ADDRESS,1,2) = '강원')
        AND SUBSTR(STUDENT_NO,1,1) != 'A';
--        AND STUDENT_NO LIKE '9%';
--         AND 19||SUBSTR(STUDENT_SSN,1,2) < 2000;
--ORDER BY STUDENT_NAME ASC;

-- 4. 현재 법학과 교수중 나이가 많은 사람부터 이름을 확인 할 수 있는 문장을 출력
-- 법학과의 학과 코드는 TB_DEPARTMENT 학과 테이블을 참고하여 찾아내자
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR 
WHERE DEPARTMENT_NO = '005'
ORDER BY PROFESSOR_NAME DESC;

-- 5.  2004년 2학기에 'C3118100' 과목을 수강한 학생들의 학점을 조회하려고 함.
-- 학점이 높은 학생부터 표시하고, 학점이 같으면 학번이 낮은 학생부터 표시하는 구문 작성
SELECT STUDENT_NO,POINT
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
    AND SUBSTR(TERM_NO,1,4) = 2004
    AND SUBSTR(TERM_NO,6,1) = 2
ORDER BY POINT DESC;

-- 6. 학생 번호 , 학생 이름, 학과 이름을 학생이름으로 오름차순 정렬
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT S
LEFT JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY SUBSTR(STUDENT_NAME,2,2) ASC;

-- 7. 과목 이름과 과목의 학과 이름을 출력하는 문장을 작성하시오.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS C
LEFT JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO;

-- 8. 과목별 교수 이름을 찾으려고 한다. 과목 이름과 교수 이름을 출력
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
LEFT JOIN TB_CLASS_PROFESSOR T ON C.CLASS_NO = T.CLASS_NO
JOIN TB_PROFESSOR P ON T.PROFESSOR_NO = P.PROFESSOR_NO
ORDER BY C.DEPARTMENT_NO ASC, C.CLASS_TYPE DESC, PROFESSOR_NAME ASC;

-- 9. 8번의 결과 중 '인문사회' 계열에 속한 과목의 교수 이름을 찾으려고 한다.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C
LEFT JOIN TB_CLASS_PROFESSOR T ON C.CLASS_NO = T.CLASS_NO
JOIN TB_PROFESSOR P ON T.PROFESSOR_NO = P.PROFESSOR_NO
WHERE C.DEPARTMENT_NO IN (SELECT D.DEPARTMENT_NO
                        FROM TB_DEPARTMENT D
                        WHERE CATEGORY IN ('인문사회'))
ORDER BY C.DEPARTMENT_NO ASC, C.CLASS_TYPE DESC,CLASS_NAME ASC, PROFESSOR_NAME ASC;

-- 10. '음악학과' 학생들의 평점을 구하려고 한다. 음악학과 학생들의  "학번","학생이름","전체 평점"을 출력
-- 단, 평점은 소수점 1 자리까지만 반올림하여 표시
SELECT S.STUDENT_NO 학번, S.STUDENT_NAME 학생이름,G.POINT "전체 평점"
FROM TB_STUDENT S
LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO;

-- 음악학과 학생들의 평점
SELECT STUDENT_NO, AVG(POINT)
FROM TB_GRADE 
GROUP BY STUDENT_NO;

--음악학과 학생들 찾기
SELECT STUDENT_NO
FROM TB_STUDENT S
LEFT JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                        FROM TB_DEPARTMENT
                        WHERE DEPARTMENT_NAME IN '음악학과');

-- 10번 풀이 결과
SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME AS 학생이름, ROUND(AVG(G.POINT), 1) AS "전체 평점"
FROM TB_STUDENT S
LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '음악학과')
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
ORDER BY "전체 평점" DESC;

-- 11번 학번이 A313047 학생이 학교에 나오지않는다. 지도 교수에게 내용을 전달하기 위한 학과이름, 학생이름, 지도교수이름 출력
SELECT DEPARTMENT_NAME AS 학과이름, S.STUDENT_NAME AS 학생이름, P.PROFESSOR_NAME AS 지도교수이름
FROM TB_PROFESSOR P
JOIN TB_STUDENT S  ON P.PROFESSOR_NO = S.COACH_PROFESSOR_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
--JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE STUDENT_NO = 'A313047';

-- 12번 2007년도 '인간관계론'과목을 수강한 학생을 찾아 학생이름과 수강학기를 표시
SELECT S.STUDENT_NAME, G.TERM_NO
FROM TB_GRADE G
LEFT JOIN TB_STUDENT S ON G.STUDENT_NO = S.STUDENT_NO
JOIN TB_CLASS C ON G.CLASS_NO = C.CLASS_NO
WHERE SUBSTR(G.TERM_NO,1,4) = 2007
        AND G.CLASS_NO = (SELECT CLASS_NO
                            FROM TB_CLASS
                            WHERE CLASS_NAME = '인간관계론')
ORDER BY 2 ASC, 1 ASC;

-- 13. 예체능 계열 과목 중 과목 담당 교수를 한 명도 배정받지 못한 과목을 찾아 이름과 학과이름을 출력
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C
JOIN TB_DEPARTMENT D ON C.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE CATEGORY = '예체능'
    AND C.CLASS_NO NOT IN (SELECT CLASS_NO FROM TB_CLASS_PROFESSOR)
ORDER BY C.DEPARTMENT_NO ASC, C.CLASS_TYPE DESC, CLASS_NAME ASC ;
-- 선생님 풀이
SELECT CLASS_NAME , DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE PROFESSOR_NO IS NULL AND CATEGORY ='예체능'
ORDER BY DEPARTMENT_NO ASC, CLASS_TYPE DESC, CLASS_NAME ASC ; -- 다시 알아보기 임의로 넣음

--14. 서반아어학과 학생들의 지도교수 게시. 지도교수가 없는 경우 "지도교수 미지정"
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON (S.COACH_PROFESSOR_NO = P.PROFESSOR_NO)
WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                            FROM TB_DEPARTMENT
                            WHERE DEPARTMENT_NAME = '서반아어학과')
ORDER BY STUDENT_NO ASC;
-- 선생님 풀이
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR P ON S.COACH_PROFESSOR_NO = P.PROFESSOR_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE D.DEPARTMENT_NAME = '서반아어학과'
ORDER BY S.STUDENT_NO;

-- 15. 휴학생이 아닌 학생 중 평점이 4.0 이상인 학생을 찾아 그 학생의 학번, 이름, 학과 이름, 평점
SELECT S.STUDENT_NO AS 학번, S.STUDENT_NAME AS 이름, 
        D.DEPARTMENT_NAME AS "학과 이름" , TRUNC(AVG(POINT),8) AS 평점
FROM TB_STUDENT S
LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
WHERE S.ABSENCE_YN IN ('N')
GROUP BY S.STUDENT_NO,S.STUDENT_NAME, D.DEPARTMENT_NAME
HAVING AVG(POINT) >= 4
ORDER BY 학번 ASC;

-- 선생님 풀이
SELECT STUDENT_NO , STUDENT_NAME, DEPARTMENT_NAME  , AVG(POINT)
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO , STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY 1;

-- 16. 환경 조경학과 전공과목들의 과목 별 평점을 파악할 수 있는 출력문
SELECT C.CLASS_NO, C.CLASS_NAME, TRUNC(AVG(POINT),8)
FROM TB_CLASS C
LEFT JOIN TB_GRADE G ON C.CLASS_NO = G.CLASS_NO
WHERE C.DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                        FROM TB_DEPARTMENT
                        WHERE DEPARTMENT_NAME = '환경조경학과')
    AND SUBSTR(CLASS_TYPE,1,2) IN ('전공')
GROUP BY C.CLASS_NO, C.CLASS_NAME
ORDER BY 1;
-- 선생님 풀이
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING(CLASS_NO)
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과' AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 1;

-- 17. 최경희 학생과 같은 과 학생들의 이름과 주소를 출력
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT WHERE STUDENT_NAME IN('최경희') );

-- 18. 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번
--1 카테시안 곱에 걸림
SELECT S.STUDENT_NO, S.STUDENT_NAME
FROM TB_STUDENT S
LEFT JOIN TB_DEPARTMENT D ON S.DEPARTMENT_NO = D.DEPARTMENT_NO
LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE DEPARTMENT_NAME = '국어국문학과';
--2
SELECT S.STUDENT_NO, S.STUDENT_NAME
FROM TB_STUDENT S
LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과')
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
HAVING AVG(G.POINT) = (SELECT MAX(AVG(POINT))
                       FROM TB_STUDENT S
                        LEFT JOIN TB_GRADE G ON S.STUDENT_NO = G.STUDENT_NO
                        WHERE S.DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과')
                        GROUP BY S.STUDENT_NO, S.STUDENT_NAME);
-- 선생님 풀이
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT) = ( SELECT MAX(AVG(POINT))
                        FROM TB_STUDENT
                        JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                        JOIN TB_GRADE USING(STUDENT_NO)
                        WHERE DEPARTMENT_NAME = '국어국문학과'
                        GROUP BY STUDENT_NO, STUDENT_NAME
);
SELECT STUDENT_NO, STUDENT_NAME
FROM  ( SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT)
                        FROM TB_STUDENT
                        JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                        JOIN TB_GRADE USING(STUDENT_NO)
                        WHERE DEPARTMENT_NAME = '국어국문학과'
                        GROUP BY STUDENT_NO, STUDENT_NAME
                        ORDER BY 3 DESC
)
WHERE ROWNUM = 1;
-- 19.   
-- 선생님 풀이
SELECT DEPARTMENT_NAME, ROUND(AVG(POINT),1)
FROM TB_DEPARTMENT
JOIN TB_CLASS USING(DEPARTMENT_NO)
JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME='환경조경학과')
        AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME
ORDER BY 1;
                    


