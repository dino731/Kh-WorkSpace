/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-31 02:34:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberEnrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1690524887649L));
    _jspx_dependants.put("jar:file:/C:/WebWorkspace1/MyBatisProject/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1690770866837L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("	.outer{\r\n");
      out.write("		background:black;\r\n");
      out.write("		color:white;\r\n");
      out.write("		width:1000px;\r\n");
      out.write("		margin:auto;\r\n");
      out.write("		margin-top:50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#enroll-form table {margin:auto;}\r\n");
      out.write("	#enroll-form input {margin:5px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("    \r\n");

	String contextPath = request.getContextPath();

	/* Member loginUser = (Member) session.getAttribute("loginUser"); */
	// 로그인전이라면 loginUser에는 null값이 담겨있을 것이고
	// 로그인성공 후라면, loginUser에는 로그인한 회원의 정보가 담긴 Member객체가 들어가 있을것.

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("	.outer{\r\n");
      out.write("		background:black;\r\n");
      out.write("		color :white;\r\n");
      out.write("		width:1000px;\r\n");
      out.write("		margin : auto;\r\n");
      out.write("		margin-top: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#login-form, #user-info {float:right}\r\n");
      out.write("	#user-info a{\r\n");
      out.write("		text-decoration : none;\r\n");
      out.write("		color : black;\r\n");
      out.write("		font-size:12px;\r\n");
      out.write("	}\r\n");
      out.write("	.nav-area {background:black;}\r\n");
      out.write("	.menu{\r\n");
      out.write("		display:table-cell;\r\n");
      out.write("		height:50px;\r\n");
      out.write("		width:150px;\r\n");
      out.write("	}\r\n");
      out.write("	.menu a{\r\n");
      out.write("		text-decoration:none;\r\n");
      out.write("		color:white;\r\n");
      out.write("		font-size:20px;\r\n");
      out.write("		font-weight:bold;\r\n");
      out.write("		display:block;\r\n");
      out.write("		width:100%;\r\n");
      out.write("		height:100%;\r\n");
      out.write("		line-height:50px;\r\n");
      out.write("	}\r\n");
      out.write("	.menu a:hover{\r\n");
      out.write("		background:darkgray;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("		const msg = \"");
      out.print( (String)session.getAttribute("alertMsg") );
      out.write("\";\r\n");
      out.write("		\r\n");
      out.write("		if(msg != \"null\"){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			// 알림창을 띄워준 후 session에 담긴 해당 메세지는 지워줘야한다.\r\n");
      out.write("			// 안그럼, menubar.jsp가 로딩될때마다 항상 메세지가 뜰것..\r\n");
      out.write("			");
 session.removeAttribute("alertMsg"); 
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	<h1 align=\"center\">Welcome C Class</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"login-area\">\r\n");
      out.write("	\r\n");
      out.write("		");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /views/common/menubar.jsp(79,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("	\r\n");
            out.write("		<form id=\"login-form\" action=\"");
            out.print( request.getContextPath());
            out.write("/login.me\" method=\"POST\">\r\n");
            out.write("			<table>\r\n");
            out.write("				<tr>\r\n");
            out.write("					<th>아이디 : </th>\r\n");
            out.write("					<td><input type=\"text\" name=\"userId\" required></td>\r\n");
            out.write("				</tr>\r\n");
            out.write("				<tr>\r\n");
            out.write("					<th>비밀번호 : </th>\r\n");
            out.write("					<td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
            out.write("				</tr>\r\n");
            out.write("				<tr>\r\n");
            out.write("					<th colspan=\"2\">\r\n");
            out.write("						<button type=\"submit\">로그인</button>\r\n");
            out.write("						<button type=\"button\" onclick=\"enrollPage();\">회원가입</button>\r\n");
            out.write("					</th>\r\n");
            out.write("				</tr>\r\n");
            out.write("			</table>			\r\n");
            out.write("		</form>	\r\n");
            out.write("		\r\n");
            out.write("		<script>\r\n");
            out.write("			function enrollPage(){\r\n");
            out.write("				\r\n");
            out.write("				");
            out.write("\r\n");
            out.write("				// 웹 애플리케이션의 디렉토리 구조가 url에 노출되면 보안에 취약하다.\r\n");
            out.write("				\r\n");
            out.write("				// 단순한 정적인 페이지 요청일지라도 반드시 servlet을 거쳐가도록 작성할것.\r\n");
            out.write("				// 즉, url에 서블릿 매핑값만 노출되도록 하기.\r\n");
            out.write("				location.href = \"");
            out.print(contextPath);
            out.write("/insert.me\";\r\n");
            out.write("			}\r\n");
            out.write("		</script>\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f1_reused = false;
      try {
        _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f1.setParent(null);
        // /views/common/menubar.jsp(113,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
        if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("		\r\n");
            out.write("			<!-- 로그인 성공 후 -->\r\n");
            out.write("			<div id=\"user-info\">\r\n");
            out.write("				<b>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.userName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("님</b> 환영합니다.<br><br>\r\n");
            out.write("				<div align=\"center\">\r\n");
            out.write("					<a href=\"");
            out.print(contextPath );
            out.write("/update.me\">마이페이지</a>\r\n");
            out.write("					<a href=\"");
            out.print(contextPath );
            out.write("/logout.me\">로그아웃</a>\r\n");
            out.write("				</div>\r\n");
            out.write("			</div>			\r\n");
            out.write("		");
            int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        _jspx_th_c_005fif_005f1_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
      }
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<br clear=\"both\"><!--  float 속성해제 -->\r\n");
      out.write("	<br>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"nav-area\" align=\"center\">\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print(contextPath );
      out.write("\">HOME</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"\">공지사항</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print(contextPath );
      out.write("/list.bo\">일반게시판</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"\">사진게시판</a></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"outer\">\r\n");
      out.write("		<br>\r\n");
      out.write("		<h2 align=\"center\">회원가입</h2>\r\n");
      out.write("		\r\n");
      out.write("		<form action=\"insert.me\" method=\"post\">\r\n");
      out.write("         <!-- 회원가입form안에.txt -->\r\n");
      out.write("         <table align=\"center\">\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* ID</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"userId\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* PWD</td>\r\n");
      out.write("               <td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>* NAME</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"userName\" required></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>&nbsp;&nbsp;EMAIL</td>\r\n");
      out.write("               <td><input type=\"email\" name=\"email\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>&nbsp;&nbsp;BIRTHDAY</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"birthday\" placeholder=\"생년월일(6자리)\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>&nbsp;&nbsp;GENDER</td>\r\n");
      out.write("               <td align=\"center\">\r\n");
      out.write("                  <input type=\"radio\" name=\"gender\" value=\"M\" checked> 남\r\n");
      out.write("                  <input type=\"radio\" name=\"gender\" value=\"F\"> 여\r\n");
      out.write("               </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>&nbsp;&nbsp;PHONE</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"phone\" placeholder=\"-포함\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("               <td>&nbsp;&nbsp;ADDRESS</td>\r\n");
      out.write("               <td><input type=\"text\" name=\"address\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("         </table>\r\n");
      out.write("         <br>\r\n");
      out.write("         <div align=\"center\">\r\n");
      out.write("            <button type=\"reset\">초기화</button>\r\n");
      out.write("            <button type=\"submit\">회원가입</button>\r\n");
      out.write("         </div>\r\n");
      out.write("      </form>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		function idCheck(){\r\n");
      out.write("			//아이디를 입력하는 input 요소객체 조회.\r\n");
      out.write("			const $userId = $(\"#enroll-form input[name=userId]\");\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"");
      out.print( contextPath);
      out.write("/idCheck.me\",\r\n");
      out.write("				data : {checkId : $userId.val()},\r\n");
      out.write("				success : function(result){\r\n");
      out.write("					if(result == \"0\"){// 사용불가\r\n");
      out.write("						alert(\"이미 존재하거나, 회원탈퇴한 아이디 입니다.\");\r\n");
      out.write("						$userId.foucus();\r\n");
      out.write("					}else{//사용가능\r\n");
      out.write("						if(confirm(\"사용가능한 아이디입니다. 사용하시겠습니까??\")){ // '확인' 사용\r\n");
      out.write("							$userId.attr(\"readonly\",true); //아이디값 확정\r\n");
      out.write("						}else{ // '취소' 사용안함\r\n");
      out.write("							$userId.focus();\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
