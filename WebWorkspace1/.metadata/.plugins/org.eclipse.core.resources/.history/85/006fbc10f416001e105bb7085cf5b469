package com.kh.board.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class boardListController
 */
@WebServlet("/list.bo")
public class boardListController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public boardListController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// -------------페이징 처리--------------
		int listCount; // 현재 총 게시글 개수(1000개)
		int currentPage; // 현재 페이지( 즉, 사용자가 요청한 페이지)
		int pageLimit; // 페이지 하단에 보여질 페이징바의 페이지 최대 개수(10개씩 예정)
		int boardLimit; // 한 페이지에 보여질 게시글의 최대 개수(10개씩 예정)
		
		int maxPage; // 가장 마지막 페이지가 몇번째 페이지인지 (총 페이지 개수)
		int startPage; // 페이지 하단에 보여질 페이징바의 시작수
		int endPage; // 페이지 하단에 보여질 페이징바의 끝수
		
		// listCount: c총 게시글 개수
		listCount = new BoardService().selectListCount();
		
		// currentPage : 현재 페이지 (즉, 사용자가 요청한 페이지)
		currentPage = Integer.parseInt(request.getParameter("currentPage") == null ? "1" : request.getParameter("currentPage"));
		
		// pageLimit : 페이지 하단에 보여질 페이징바의 페이지 최대 개수(페이지 목록들을 몇 개 단위로 출력할 것인지)
		pageLimit = 10;
		
		// boardLimit : 한 페이지에 보여질 게시글의 최대 개수(게시글 몇개 단위로 출력할 것인지)
		boardLimit = 10;
		
		// maxPage : 가장 마지막 페이지가 몇번 페이지인지 (총 페이지 수)
		/*
		 * listCount, boardLimit에 영향을 받음
		 * 
		 * - 공식 구하기(boardLimit가 10이라는 가정하에 규칙을 세울 것)
		 * 
		 * 		총 개수 				boadLimit					maxPage
		 * 		1000개		/		10	=> 100.0				100번 페이지가 마지막
		 * 		1001개		/		10	=> 100.1				101번 페이지가 마지막
		 * 		1005개		/		10	=> 100.5				101번 페이지가 마지막
		 * 		1010개		/		10	=> 101.0				101번 페이지가 마지막
		 * 		1011개		/		10	=> 101.1				102번 페이지가 마지막
		 * 
		 * 		=> 나눗셈 연산한 결과를 올림처리하면 maxPage가 나온다.
		 * 
		 * 		1. listCount를 double로 형변환
		 * 		2. listCount / boardLimit를 실행
		 * 		3. 결과 값에 올림처리해주는 Math.ceil() 메소드 호출
		 * 		4. 결과 값에 다시 int로 강제형변환
		 * 
		 * 
		 * 
		 * 
		 * 
		 * 
		*/
		
		
		request.getRequestDispatcher("/views/board/boardListView").forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
