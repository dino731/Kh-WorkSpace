package com.kh.board.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;

import com.kh.board.model.service.BoardService;
import com.kh.board.model.vo.Category;

/**
 * Servlet implementation class BoardInsertController
 */
@WebServlet("/insert.bo")
public class BoardInsertController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public BoardInsertController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		ArrayList<Category> list = new BoardService().selectCategoryList();
		
		request.setAttribute("list",list);
		
		
		request.getRequestDispatcher("views/board/boardEnrollForm.jsp").forward(request, response);
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("UTF-8");
		
		//request.getParameter("title");
		// 폼 전송을 일반방식이 아닌 multipart/form=data로 전송하는 경우
		// request로 값을 뽑을 수 가 없음
		// multipart라는 객체에 값을 이관시킨 후 다뤄야 한다.
		
		// enctype이 multipart/form-data로 전송되었을 경우에만 내용이 수정되도록 조건을 추가
		if(ServletFileUpload.isMultipartContent(request)) { //전송 방식이 multipart인지 체크 / 맞다면 true,  아니라면 false
			
			// 1. 전송되는 파일을 처리할 작업 내용(전송되는 파일의 용량 제한, 전달된 파이를 전달할 폴더 경로)
			// 1_1. 전송되는 파일 용량 제한하기 => byte단위로 기술해야한다.
			/*
			 * byte -> kbyte -> mbyte -> gbyte -> tbyte...
			 * 1 kbyte == 1024byte
			 * 1 mbyte == 1024kbyte == 1024 * 1024 byte
			*/
			int maxSize = 10 * 1024 * 1024; // 10MBYTE
			
			// 1_2. 전달된 파일을 저장할 서버의 폴더 경로 알아내기(String savePath)
			// 세션 객체에서 제공하는 getRealPath메소드를 통해 알아내기
			// 다만, WebContents 폴더로 부터 board_upfiles(저장할 폴더) 폴더까지의 경로는 매개변수로 제시해줄 예정
			// 그리고 결론적으로는 board_upfailes 폴더 내부에 파일들이 저장될 예정이기 때문에 /를 하나 더 추가해줘야한다.4
			String savePath = request.getSession().getServletContext().getRealPath("/resources/board_upfiles/");
			System.out.println(savePath);
			
		}else {
			request.setAttribute("errorMsg", "전송방식이 잘못되었습니다.");
			request.getRequestDispatcher("views/common/errorPage.jsp").forward(request, response);
		}
		
	}

}
